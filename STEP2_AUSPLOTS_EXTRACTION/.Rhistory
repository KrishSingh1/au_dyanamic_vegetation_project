?apply
# Now calculate the relative dominance: percent of dominant species/total sum of percentage of species
calc.relative.dominance <- function(dataset.row) {
print(dataset.row)
site.sum <- rowSums(dataset.row[, which(!(colnames(dataset.row)) %in% c('site_location_name', 'vegetation_type'))])
dominant.type <- dataset.row['vegetation_type'][[1]]
rel_dom <- dataset.row[, dominant.type]/site.sum
return(rel_dom)
}
growth.form.agg$relative_dominance <- unlist(apply(growth.form.agg, MARGIN = 1, FUN = calc.relative.dominance))
# Now calculate the relative dominance: percent of dominant species/total sum of percentage of species
calc.relative.dominance <- function(dataset.row) {
site.sum <- rowSums(dataset.row[, which(!(colnames(dataset.row) %in% c('site_location_name', 'vegetation_type')))])
dominant.type <- dataset.row['vegetation_type'][[1]]
rel_dom <- dataset.row[, dominant.type]/site.sum
return(rel_dom)
}
growth.form.agg$relative_dominance <- unlist(apply(growth.form.agg, MARGIN = 1, FUN = calc.relative.dominance))
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_Classification_by_Dominant_Species.R")
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_Classification_by_Dominant_Species.R")
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_Classification_by_Dominant_Species.R")
?as.numeric
# Now calculate the relative dominance: percent of dominant species/total sum of percentage of species
calc.relative.dominance <- function(dataset.row) {
site.species.percentages <- as.numeric(dataset.row[which(!(colnames(dataset.row) %in% c('site_location_name', 'vegetation_type')))])
site.sum <- sum(site.sum)
dominant.type <- dataset.row['vegetation_type'][[1]]
rel_dom <- dataset.row[, dominant.type]/site.sum
return(rel_dom)
}
growth.form.agg$relative_dominance <- unlist(apply(growth.form.agg, MARGIN = 1, FUN = calc.relative.dominance))
# Now calculate the relative dominance: percent of dominant species/total sum of percentage of species
calc.relative.dominance <- function(dataset.row) {
site.species.percentages <- as.numeric(dataset.row[which(!(colnames(dataset.row) %in% c('site_location_name', 'vegetation_type')))])
site.sum <- sum(site.species.percentages)
dominant.type <- dataset.row['vegetation_type'][[1]]
rel_dom <- dataset.row[, dominant.type]/site.sum
return(rel_dom)
}
growth.form.agg$relative_dominance <- unlist(apply(growth.form.agg, MARGIN = 1, FUN = calc.relative.dominance))
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_Classification_by_Dominant_Species.R")
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_Classification_by_Dominant_Species.R")
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_Classification_by_Dominant_Species.R")
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_Classification_by_Dominant_Species.R")
View(growth.form.agg)
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_Classification_by_Dominant_Species.R")
View(growth.form.agg)
growth.form.agg$vegetation_type <- unlist(apply(growth.form.agg, MARGIN = 1, FUN = classify))
# Now calculate the relative dominance: percent of dominant species/total sum of percentage of species
calc.relative.dominance <- function(dataset.row) {
# Get and covert species percent into numeric
site.species.percentages <- as.numeric(dataset.row[which(!(colnames(dataset.row) %in% c('site_location_name', 'vegetation_type')))])
site.sum <- sum(site.species.percentages, na.rm = T) # calc the sum
print(site.sum)
dominant.type <- dataset.row['vegetation_type'][[1]] # get the percent of dominat species
rel_dom <- site.species.percentages[dominant.type]/site.sum # get the relatice dominance
return(rel_dom)
}
growth.form.agg$relative_dominance <- unlist(apply(growth.form.agg, MARGIN = 1, FUN = calc.relative.dominance))
# Now calculate the relative dominance: percent of dominant species/total sum of percentage of species
calc.relative.dominance <- function(dataset.row) {
# Get and covert species percent into numeric
site.species.percentages <- as.numeric(dataset.row[which(!(colnames(dataset.row) %in% c('site_location_name', 'vegetation_type')))])
print(site.species.percentages)
site.sum <- sum(site.species.percentages, na.rm = T) # calc the sum
print(site.sum)
dominant.type <- dataset.row['vegetation_type'][[1]] # get the percent of dominat species
rel_dom <- site.species.percentages[dominant.type]/site.sum # get the relatice dominance
return(rel_dom)
}
growth.form.agg$relative_dominance <- unlist(apply(growth.form.agg, MARGIN = 1, FUN = calc.relative.dominance))
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_Classification_by_Dominant_Species.R")
which((colnames(growth.form) %in% c('site_location_name', 'vegetation_type')))
which((colnames(growth.form.agg) %in% c('site_location_name', 'vegetation_type')))
!which((colnames(growth.form.agg) %in% c('site_location_name', 'vegetation_type')))
growth.form.agg[,!which((colnames(growth.form.agg) %in% c('site_location_name', 'vegetation_type')))]
growth.form.agg[,! which((colnames(growth.form.agg) %in% c('site_location_name', 'vegetation_type')))]
growth.form.agg[,which(!(colnames(growth.form.agg) %in% c('site_location_name', 'vegetation_type')))]
# Now calculate the relative dominance: percent of dominant species/total sum of percentage of species
calc.relative.dominance <- function(dataset.row) {
# Get and covert species percent into numeric
site.species.percentages <- as.numeric(dataset.row[which(!(colnames(dataset.row) %in% c('site_location_name', 'vegetation_type')))])
print(site.species.percentages)
site.sum <- sum(site.species.percentages, na.rm = T) # calc the sum
print(site.sum)
dominant.type <- dataset.row['vegetation_type'][[1]] # get the percent of dominat species
rel_dom <- site.species.percentages[dominant.type]/site.sum # get the relatice dominance
return(rel_dom)
}
growth.form.agg$relative_dominance <- unlist(apply(growth.form.agg, MARGIN = 1, FUN = calc.relative.dominance))
# Now calculate the relative dominance: percent of dominant species/total sum of percentage of species
calc.relative.dominance <- function(dataset.row) {
# Get and covert species percent into numeric
site.species.percentages <- as.numeric(dataset.row[which(!(colnames(dataset.row) %in% c('site_location_name', 'vegetation_type')))])
print(site.species.percentages)
site.sum <- sum(site.species.percentages, na.rm = T) # calc the sum
dominant.type <- dataset.row['vegetation_type'][[1]] # get the percent of dominat species
rel_dom <- site.species.percentages[dominant.type]/site.sum # get the relatice dominance
return(rel_dom)
}
growth.form.agg$relative_dominance <- unlist(apply(growth.form.agg, MARGIN = 1, FUN = calc.relative.dominance))
# Now calculate the relative dominance: percent of dominant species/total sum of percentage of species
calc.relative.dominance <- function(dataset.row) {
# Get and covert species percent into numeric
site.species.percentages <- dataset.row[which(!(colnames(dataset.row) %in% c('site_location_name', 'vegetation_type')))]
print(site.species.percentages)
site.sum <- sum(site.species.percentages, na.rm = T) # calc the sum
dominant.type <- dataset.row['vegetation_type'][[1]] # get the percent of dominat species
rel_dom <- site.species.percentages[dominant.type]/site.sum # get the relatice dominance
return(rel_dom)
}
growth.form.agg$relative_dominance <- unlist(apply(growth.form.agg, MARGIN = 1, FUN = calc.relative.dominance))
# Now calculate the relative dominance: percent of dominant species/total sum of percentage of species
calc.relative.dominance <- function(dataset.row) {
# Get and covert species percent into numeric
site.species.percentages <- dataset.row[which(!(names(dataset.row) %in% c('site_location_name', 'vegetation_type')))]
print(site.species.percentages)
site.sum <- sum(site.species.percentages, na.rm = T) # calc the sum
dominant.type <- dataset.row['vegetation_type'][[1]] # get the percent of dominat species
rel_dom <- site.species.percentages[dominant.type]/site.sum # get the relatice dominance
return(rel_dom)
}
growth.form.agg$relative_dominance <- unlist(apply(growth.form.agg, MARGIN = 1, FUN = calc.relative.dominance))
# Now calculate the relative dominance: percent of dominant species/total sum of percentage of species
calc.relative.dominance <- function(dataset.row) {
# Get and covert species percent into numeric
site.species.percentages <- as.numeric(dataset.row[which(!(names(dataset.row) %in% c('site_location_name', 'vegetation_type')))])
print(site.species.percentages)
site.sum <- sum(site.species.percentages, na.rm = T) # calc the sum
dominant.type <- dataset.row['vegetation_type'][[1]] # get the percent of dominat species
rel_dom <- site.species.percentages[dominant.type]/site.sum # get the relatice dominance
return(rel_dom)
}
growth.form.agg$relative_dominance <- unlist(apply(growth.form.agg, MARGIN = 1, FUN = calc.relative.dominance))
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_Classification_by_Dominant_Species.R")
View(growth.form.agg)
# Now calculate the relative dominance: percent of dominant species/total sum of percentage of species
calc.relative.dominance <- function(dataset.row) {
# Get and covert species percent into numeric
site.species.percentages <- as.numeric(dataset.row[which(!(names(dataset.row) %in% c('site_location_name', 'vegetation_type')))])
site.sum <- sum(site.species.percentages, na.rm = T) # calc the sum
print(site.sum)
dominant.type <- dataset.row['vegetation_type'][[1]] # get the percent of dominat species
rel_dom <- site.species.percentages[dominant.type]/site.sum # get the relatice dominance
return(rel_dom)
}
growth.form.agg$relative_dominance <- unlist(apply(growth.form.agg, MARGIN = 1, FUN = calc.relative.dominance))
unlist(apply(growth.form.agg, MARGIN = 1, FUN = calc.relative.dominance))
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_Classification_by_Dominant_Species.R")
# Now calculate the relative dominance: percent of dominant species/total sum of percentage of species
calc.relative.dominance <- function(dataset.row) {
# Get and covert species percent into numeric
site.species.percentages <- as.numeric(dataset.row[which(!(names(dataset.row) %in% c('site_location_name', 'vegetation_type')))])
site.sum <- sum(site.species.percentages, na.rm = T) # calc the sum
dominant.type <- dataset.row['vegetation_type'][[1]] # get the percent of dominant species
print(dominant.type)
print(site.species.percentages[dominant.type])
rel_dom <- site.species.percentages[dominant.type]/site.sum # get the relative dominance
return(rel_dom)
}
growth.form.agg$relative_dominance <- unlist(apply(growth.form.agg, MARGIN = 1, FUN = calc.relative.dominance))
# Now calculate the relative dominance: percent of dominant species/total sum of percentage of species
calc.relative.dominance <- function(dataset.row) {
# Get and covert species percent into numeric
site.species.percentages <- as.numeric(dataset.row[which(!(names(dataset.row) %in% c('site_location_name', 'vegetation_type')))])
site.sum <- sum(site.species.percentages, na.rm = T) # calc the sum
dominant.type <- site.species.percentages[which(names(site.species.percentages) ==  dataset.row['vegetation_type'][[1]])]
rel_dom <- site.species.percentages[dominant.type]/site.sum # get the relative dominance
return(rel_dom)
}
growth.form.agg$relative_dominance <- unlist(apply(growth.form.agg, MARGIN = 1, FUN = calc.relative.dominance))
# Now calculate the relative dominance: percent of dominant species/total sum of percentage of species
calc.relative.dominance <- function(dataset.row) {
# Get and covert species percent into numeric
site.species.percentages <- as.numeric(dataset.row[which(!(names(dataset.row) %in% c('site_location_name', 'vegetation_type')))])
site.sum <- sum(site.species.percentages, na.rm = T) # calc the sum
dominant.species.perecent <- site.species.percentages[which(names(site.species.percentages) == dataset.row['vegetation_type'][[1]])]
rel_dom <- dominant.species.perecent/site.sum # get the relative dominance
return(rel_dom)
}
growth.form.agg$relative_dominance <- unlist(apply(growth.form.agg, MARGIN = 1, FUN = calc.relative.dominance))
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_Classification_by_Dominant_Species.R")
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_Classification_by_Dominant_Species.R")
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_Classification_by_Dominant_Species.R")
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_Classification_by_Dominant_Species.R")
View(growth.form.agg)
# Now calculate the relative dominance: percent of dominant species/total sum of percentage of species
calc.scaled.dominance <- function(dataset.row) {
# Get and covert species percent into numeric
dominant.species.percent <- as.numeric(dataset.row[dataset.row['vegetation_type'][[1]]])
rel_dom <- as.numeric(dataset.row['relative_dominance'])
scaled_dom <- dominant.species.percent * rel_dom # get the scaled dominance
return(scaled_dom)
}
# Now calculate the relative dominance: percent of dominant species/total sum of percentage of species
calc.scaled.dominance <- function(dataset.row) {
# Get and covert species percent into numeric
dominant.species.percent <- as.numeric(dataset.row[dataset.row['vegetation_type'][[1]]])
rel_dom <- as.numeric(dataset.row['relative_dominance'])
scaled_dom <- dominant.species.percent * rel_dom # get the scaled dominance
return(scaled_dom)
}
growth.form.agg$scaled_dom <- unlist(apply(growth.form.agg, MARGIN = 1, FUN = calc.scaled.dominance))
View(growth.form.agg)
barplot(growth.form.agg[249,])
barplot(growth.form.agg[249,])
barplot(growth.form.agg[,c('Tree.Mallee', 'Tussock.grass')])
?barplot
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_Classification_by_Dominant_Species.R")
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_Classification_by_Dominant_Species.R")
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_Classification_by_Dominant_Species.R")
library(ausplotsR)
# Get list of sites
query.dir <- "/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/DataExtraction/BACKUP_DATA/csv_files/"
files <- list.files(query.dir, pattern = "\\.csv$", full.names = FALSE)
site.names <- tools::file_path_sans_ext(files)
version <- gsub('\\.', '-', packageVersion("ausplotsR"))
?get_ausplots
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/Ausplots_Veg_Extraction_2-0-6.R")
rel_dom <- dominant.species.percent/site.sum # get the relative dominance
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/AusPlots_FC_Extraction.R")
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/Ausplots_Veg_Extraction_2-0-6.R")
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP2_AUSPLOTS_EXTRACTION/Ausplots_Veg_Extraction_2-0-6.R")
View(veg_info)
for i in veg_info:
for (i in veg_info){
print(i)
}
for (i in veg_info){
print(class(i))
}
for (i in veg_info) {
if (class(i) == "data.frame") {
#file <- paste0("../DATASETS/AusPlots_Extracted_Data/","site_veg_", version, ".rds")
print(names(i))
}
}
View(veg_info)
print(names(veg_info))
veg_info['site.info']
names(veg_info)
names(veg_info)[1]
strsplit(names(veg_info)[1])
strsplit(names(veg_info)[1], split = '.')
strsplit(names(veg_info)[1], split = ".")
names(veg_info)[1]
strsplit('site.info', split = ".")
strsplit('site.info', split = "\.")
strsplit('site.info', split = ".")
strsplit('site.info', split = " ")
strsplit('site.info', split = "/")
strsplit('site.info', split = ".")
strsplit('site.info', split = "\\.")
gsub('.','','site.info')
gsub('\\.','','site.info')
gsub('\\.','_','site.info')
# Export each dataframe from the downloaded r object as a csv file
for (i in names(veg_info)) {
if (i != 'citation') {
name <- gsub('\\.','_',i) # replace '.' with '_' for file naming
file <- paste0("../DATASETS/AusPlots_Extracted_Data/","extracted_",name,"_",version ,  ".csv")
write.csv(veg_info[i], file)
print(paste0('Exported ', i, ' as a csv file.'))
}
}
View(veg_info)
veg_info[["metadata.dictionary"]][["variableLabel"]][[3]]
View(veg_info)
veg_info[["metadata.dictionary"]][["variableCode"]]
View(veg_info[["metadata.dictionary"]])
# Export each dataframe from the downloaded r object as a csv file
for (i in names(veg_info)) {
if (i != 'citation') {
name <- gsub('\\.','_',i) # replace '.' with '_' for file naming
file <- paste0("../DATASETS/AusPlots_Extracted_Data/","extracted_",name,"_",version ,  ".csv")
write.csv(veg_info[[i]], file)
print(paste0('Exported ', i, ' as a csv file.'))
}
}
veg_info[[i]]
as.data.frame(veg_info[[i]])
for (i in names(veg_info)) {
if (i != 'citation') {
name <- gsub('\\.','_',i) # replace '.' with '_' for file naming
file <- paste0("../DATASETS/AusPlots_Extracted_Data/","extracted_",name,"_",version ,  ".csv")
write.csv(as.data.frame(veg_info[[i]]), file)
print(paste0('Exported ', i, ' as a csv file.'))
}
}
for (i in names(veg_info)) {
if (i != 'citation') {
name <- gsub('\\.','_',i) # replace '.' with '_' for file naming
file <- paste0("../DATASETS/AusPlots_Extracted_Data/","extracted_",name,"_",version ,  ".csv")
write.csv(veg_info[i], file)
print(paste0('Exported ', i, ' as a csv file.'))
}
}
file <- paste0("../DATASETS/AusPlots_Extracted_Data/","site_veg_", version, ".rds")
veg_info <- readRDS(file)
library(ausplotsR)
version <- gsub('\\.', '-', packageVersion("ausplotsR"))
veg_info <- readRDS(file)
file <- paste0("../DATASETS/AusPlots_Extracted_Data/","site_veg_", version, ".rds")
veg_info <- readRDS(file)
View(veg_info)
View(veg_info)
View(veg_info[["metadata.dictionary"]])
View(veg_info)
veg_info[["metadata.dictionary"]][["variableLabel"]]
veg_info[["metadata.dictionary"]][["variableCode"]]
veg_info$metadata.dictionary$variableValueLabel <- unlist(veg_info$metadata.dictionary$variableValueLabel)
# Export each dataframe from the downloaded r object as a csv file
for (i in names(veg_info)) {
if (i != 'citation') {
name <- gsub('\\.','_',i) # replace '.' with '_' for file naming
file <- paste0("../DATASETS/AusPlots_Extracted_Data/","extracted_",name,"_",version ,  ".csv")
write.csv(veg_info[i], file)
print(paste0('Exported ', i, ' as a csv file.'))
}
}
unlist(veg_info$metadata.dictionary$variableValueLabel)
View(veg_info)
veg_info[["metadata.dictionary"]][["variableCode"]]
veg_info[["metadata.dictionary"]][["variableValueLabel"]]
View(veg_info)
veg_info$metadata.dictionary$variableValueLabel[2]
veg_info$metadata.dictionary$variableValueLabel[1]
veg_info$metadata.dictionary$variableValueLabel[3]
veg_info$metadata.dictionary$variableValueLabel[2]
veg_info$metadata.dictionary$variableLabel <- unlist(veg_info$metadata.dictionary$variableLabel)
veg_info$metadata.dictionary$variableLabel[2]
veg_info$metadata.dictionary$variableLabel[2] <- paste(unlist(veg_info$metadata.dictionary$variableLabel[2]))
paste(unlist(veg_info$metadata.dictionary$variableLabel[[2]]))
paste(unlist(veg_info$metadata.dictionary$variableLabel))
paste(unlist(veg_info$metadata.dictionary$variableLabel[2]))
veg_info$metadata.dictionary$variableLabel[2]
version <- gsub('\\.', '-', packageVersion("ausplotsR"))
file <- paste0("../DATASETS/AusPlots_Extracted_Data/","site_veg_", version, ".rds")
veg_info <- readRDS(file)
veg_info$metadata.dictionary$variableLabel[2] <- paste(unlist(veg_info$metadata.dictionary$variableLabel[2]))
veg_info$metadata.dictionary$variableLabel[2]
version <- gsub('\\.', '-', packageVersion("ausplotsR"))
file <- paste0("../DATASETS/AusPlots_Extracted_Data/","site_veg_", version, ".rds")
veg_info <- readRDS(file)
veg_info$metadata.dictionary$variableLabel[2])
veg_info$metadata.dictionary$variableLabel[2]
unlist(veg_info$metadata.dictionary$variableLabel[2])
unlist(veg_info$metadata.dictionary$variableLabel[[2]])
unlist(veg_info$metadata.dictionary$variableLabel[2])
class(unlist(veg_info$metadata.dictionary$variableLabel[2]))
paste(class(unlist(veg_info$metadata.dictionary$variableLabel[2])))
paste(unlist(veg_info$metadata.dictionary$variableLabel[2]))
paste0(unlist(veg_info$metadata.dictionary$variableLabel[2]))
paste0(paste0(unlist(veg_info$metadata.dictionary$variableLabel[2])))
paste0(unlist(veg_info$metadata.dictionary$variableLabel[2]))
l = paste0(unlist(veg_info$metadata.dictionary$variableLabel[2]))
cat(l)
l = paste0(cat(unlist(veg_info$metadata.dictionary$variableLabel[2])))
version <- gsub('\\.', '-', packageVersion("ausplotsR"))
file <- paste0("../DATASETS/AusPlots_Extracted_Data/","site_veg_", version, ".rds")
veg_info <- readRDS(file)
# Transform columns to allow export - record 2 of 'variableLabel' is a list, need to concat the elements
veg_info$metadata.dictionary$variableLabel[2] <- paste0(cat(unlist(veg_info$metadata.dictionary$variableLabel[2])))
paste0(cat(unlist(veg_info$metadata.dictionary$variableLabel[2])))
version <- gsub('\\.', '-', packageVersion("ausplotsR"))
file <- paste0("../DATASETS/AusPlots_Extracted_Data/","site_veg_", version, ".rds")
veg_info <- readRDS(file)
paste0(cat(unlist(veg_info$metadata.dictionary$variableLabel[2])))
cat(unlist(veg_info$metadata.dictionary$variableLabel[2]))
# Transform columns to allow export - record 2 of 'variableLabel' is a list, need to concat the elements
veg_info$metadata.dictionary$variableLabel[2] <- cat(unlist(veg_info$metadata.dictionary$variableLabel[2]))
apply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
cat(unlist(x))
})
apply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
cat(unlist(x))
})
veg_info$metadata.dictionary$variableLabel
version <- gsub('\\.', '-', packageVersion("ausplotsR"))
file <- paste0("../DATASETS/AusPlots_Extracted_Data/","site_veg_", version, ".rds")
veg_info <- readRDS(file)
apply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
cat(unlist(x))
})
apply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
print(x)
})
veg_info$metadata.dictionary$variableLabel
apply(veg_info$metadata.dictionary$variableLabel, MARGIN = 0, FUN = function(x){
print(x)
})
apply(veg_info$metadata.dictionary$variableLabel, MARGIN = 1, FUN = function(x){
print(x)
})
Lapply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
print(x)
})
lapply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
print(x)
})
lapply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
cat(unlist(x))
})
class(list(1))
lapply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
if(class(x) == "list"){
x <- cat(unlist(x))
}
return(x)
})
unlist(lapply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
if(class(x) == "list"){
x <- cat(unlist(x))
}
return(x)
}))
# Transform columns to allow export - record 2 of 'variableLabel' is a list, need to concat the elements
veg_info$metadata.dictionary$variableLabel <-unlist(lapply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
if(class(x) == "list"){
x <- cat(unlist(x))
}
return(x)
}))
unlist(lapply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
if(class(x) == "list"){
x <- cat(unlist(x))
}
return(x)
}))
unlist(lapply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
if(class(x) == "list"){
x <- as.character(cat(unlist(x)))
}
return(x)
}))
unlist(lapply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
if(class(x) == "list"){
x <- as.character(cat(x))
}
return(x)
}))
unlist(lapply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
if(class(x) == "list"){
x <- as.character(cat(rbind(x)))
}
return(x)
}))
unlist(lapply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
if(class(x) == "list"){
x <- as.character(cat(cbind(x)))
}
return(x)
}))
cat(unlist(x))
cat(unlist(veg_info$metadata.dictionary$variableLabel[2]))
class(cat(unlist(veg_info$metadata.dictionary$variableLabel[2])))
paste(cat(unlist(veg_info$metadata.dictionary$variableLabel[2])))
cat(unlist(veg_info$metadata.dictionary$variableLabel[2]))
cat(unlist(veg_info$metadata.dictionary$variableLabel[2]))
cat(unlist(veg_info$metadata.dictionary$variableLabel[2]))
i = cat(unlist(veg_info$metadata.dictionary$variableLabel[2]))
i
cat(unlist(veg_info$metadata.dictionary$variableLabel[2]))
paste(veg_info$metadata.dictionary$variableLabel[2])
paste(veg_info$metadata.dictionary$variableLabel[2], collapse = ",")
paste(veg_info$metadata.dictionary$variableLabel[2], collapse = "/")
paste(veg_info$metadata.dictionary$variableLabel[2], collapse = "\")
paste(veg_info$metadata.dictionary$variableLabel[2], collapse = " ")
# Transform columns to allow export - record 2 of 'variableLabel' is a list, need to concat the elements
veg_info$metadata.dictionary$variableLabel <- unlist(lapply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
if(class(x) == "list"){
x <- paste(x)
}
return(x)
}))
unlist(lapply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
if(class(x) == "list"){
x <- paste(x)
}
return(x)
}))
paste(veg_info$metadata.dictionary$variableLabel[2])
cat(paste(veg_info$metadata.dictionary$variableLabel[2]))
paste(veg_info$metadata.dictionary$variableLabel[2])
paste(cat(veg_info$metadata.dictionary$variableLabel[2]))
# Transform columns to allow export - record 2 of 'variableLabel' is a list, need to concat the elements
veg_info$metadata.dictionary$variableLabel <- unlist(lapply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
if(class(x) == "list"){
x <- paste(x, collapse = ",")
}
return(x)
}))
View(veg_info[["metadata.dictionary"]])
version <- gsub('\\.', '-', packageVersion("ausplotsR"))
file <- paste0("../DATASETS/AusPlots_Extracted_Data/","site_veg_", version, ".rds")
veg_info <- readRDS(file)
# Transform columns to allow export - record 2 of 'variableLabel' is a list, need to concat the elements
veg_info$metadata.dictionary$variableLabel <- unlist(lapply(veg_info$metadata.dictionary$variableLabel, FUN = function(x){
if(class(x) == "list"){
x <- paste(x, collapse = ",")
}
return(x)
}))
# Export each dataframe from the downloaded r object as a csv file
for (i in names(veg_info)) {
if (i != 'citation') {
name <- gsub('\\.','_',i) # replace '.' with '_' for file naming
file <- paste0("../DATASETS/AusPlots_Extracted_Data/","extracted_",name,"_",version ,  ".csv")
write.csv(veg_info[i], file)
print(paste0('Exported ', i, ' as a csv file.'))
}
}
