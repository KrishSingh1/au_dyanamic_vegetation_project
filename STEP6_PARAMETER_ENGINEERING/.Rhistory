directory = directory))
names(score.values) <- site.name
return(score.values)
})
da[[1]][["WAAPIL0003"]]
da <- lapply(site.subset.names, FUN = function(site.name) {
score.values <- t(sapply(1:2, FUN = test.window,
site.focus = site.name,
directory = directory,USE.NAMES = T))
return(score.values)
})
View(da)
da[[1]]
da <- lapply(site.subset.names, FUN = function(site.name) {
score.values <- as.data.frame(t(sapply(1:2, FUN = test.window,
site.focus = site.name,
directory = directory,USE.NAMES = T)))
names(score.values) <- site.name
return(score.values)
})
View(da)
da[[1]][["NA"]]
da[[1]][["WAAPIL0003"]]
da[[1]]
values.test <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = site.name.focus,
directory = directory)))
View(values.test)
test.window <- function(window, site.focus, directory) {
precip.window <- apply_sliding_window(get_precip_data(site.focus,directory),
window)
colnames(precip.window)[1] <- 'date'
precip.window$date <- as.Date(precip.window$date)
# Visualise the dataset
site.greenness <- read.csv(paste0('../STEP6_PARAMETER_ENGINEERING/combined_data_', site.focus, '.csv'))
site.greenness$date <- as.Date(site.greenness$date)
test <- precip.window %>% full_join(site.greenness, by = 'date')
test <- test[order(test$date),]
rownames(test) <- 1:nrow(test)
test <- aggregate(test[,c('window.sum','NDVI', 'green_mean', 'pv', 'green')],
by = list(test$date), FUN = mean, na.rm = T)
return(c("window" =  window,
paste0(site.focus,".adjusted.R2") = summary(lm(pv ~ window.sum, test))$adj.r.squared))
test.window <- function(window, site.focus, directory) {
precip.window <- apply_sliding_window(get_precip_data(site.focus,directory),
window)
colnames(precip.window)[1] <- 'date'
precip.window$date <- as.Date(precip.window$date)
# Visualise the dataset
site.greenness <- read.csv(paste0('../STEP6_PARAMETER_ENGINEERING/combined_data_', site.focus, '.csv'))
site.greenness$date <- as.Date(site.greenness$date)
test <- precip.window %>% full_join(site.greenness, by = 'date')
test <- test[order(test$date),]
rownames(test) <- 1:nrow(test)
test <- aggregate(test[,c('window.sum','NDVI', 'green_mean', 'pv', 'green')],
by = list(test$date), FUN = mean, na.rm = T)
return(c("window" =  window,
`paste0(site.focus,".adjusted.R2")` = summary(lm(pv ~ window.sum, test))$adj.r.squared))
}
# Get names of the site subset
site.subset <- read.csv('../STEP2_NDVI_EXTRACTION/Sites_Subset_20231010/ausplots_site_info/sites_subset.csv')
site.subset.names <- unique(site.subset$site_location_name)
site.name.focus <- 'TCATCH0006'
site.focus <- site.subset.names[which(site.subset.names == site.name.focus)] # pick a focus site
directory <- "C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/DataExtraction/BACKUP_DATA/ausplots_agcd"
values.test <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = site.name.focus,
directory = directory)))
View(values.test)
test.window <- function(window, site.focus, directory) {
precip.window <- apply_sliding_window(get_precip_data(site.focus,directory),
window)
colnames(precip.window)[1] <- 'date'
precip.window$date <- as.Date(precip.window$date)
# Visualise the dataset
site.greenness <- read.csv(paste0('../STEP6_PARAMETER_ENGINEERING/combined_data_', site.focus, '.csv'))
site.greenness$date <- as.Date(site.greenness$date)
test <- precip.window %>% full_join(site.greenness, by = 'date')
test <- test[order(test$date),]
rownames(test) <- 1:nrow(test)
test <- aggregate(test[,c('window.sum','NDVI', 'green_mean', 'pv', 'green')],
by = list(test$date), FUN = mean, na.rm = T)
return(c("window" =  window,
site.focus = summary(lm(pv ~ window.sum, test))$adj.r.squared))
}
# Get names of the site subset
site.subset <- read.csv('../STEP2_NDVI_EXTRACTION/Sites_Subset_20231010/ausplots_site_info/sites_subset.csv')
site.subset.names <- unique(site.subset$site_location_name)
site.name.focus <- 'TCATCH0006'
site.focus <- site.subset.names[which(site.subset.names == site.name.focus)] # pick a focus site
directory <- "C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/DataExtraction/BACKUP_DATA/ausplots_agcd"
values.test <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = site.name.focus,
directory = directory)))
View(da)
View(values.test)
test.window <- function(window, site.focus, directory) {
precip.window <- apply_sliding_window(get_precip_data(site.focus,directory),
window)
colnames(precip.window)[1] <- 'date'
precip.window$date <- as.Date(precip.window$date)
# Visualise the dataset
site.greenness <- read.csv(paste0('../STEP6_PARAMETER_ENGINEERING/combined_data_', site.focus, '.csv'))
site.greenness$date <- as.Date(site.greenness$date)
test <- precip.window %>% full_join(site.greenness, by = 'date')
test <- test[order(test$date),]
rownames(test) <- 1:nrow(test)
test <- aggregate(test[,c('window.sum','NDVI', 'green_mean', 'pv', 'green')],
by = list(test$date), FUN = mean, na.rm = T)
return(c("window" =  window,
`site.focus` = summary(lm(pv ~ window.sum, test))$adj.r.squared))
}
# Get names of the site subset
site.subset <- read.csv('../STEP2_NDVI_EXTRACTION/Sites_Subset_20231010/ausplots_site_info/sites_subset.csv')
site.subset.names <- unique(site.subset$site_location_name)
site.name.focus <- 'TCATCH0006'
site.focus <- site.subset.names[which(site.subset.names == site.name.focus)] # pick a focus site
directory <- "C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/DataExtraction/BACKUP_DATA/ausplots_agcd"
values.test <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = site.name.focus,
directory = directory)))
View(values.test)
test.window <- function(window, site.focus, directory) {
precip.window <- apply_sliding_window(get_precip_data(site.focus,directory),
window)
colnames(precip.window)[1] <- 'date'
precip.window$date <- as.Date(precip.window$date)
# Visualise the dataset
site.greenness <- read.csv(paste0('../STEP6_PARAMETER_ENGINEERING/combined_data_', site.focus, '.csv'))
site.greenness$date <- as.Date(site.greenness$date)
test <- precip.window %>% full_join(site.greenness, by = 'date')
test <- test[order(test$date),]
rownames(test) <- 1:nrow(test)
test <- aggregate(test[,c('window.sum','NDVI', 'green_mean', 'pv', 'green')],
by = list(test$date), FUN = mean, na.rm = T)
ret <- c("window" =  window, summary(lm(pv ~ window.sum, test))$adj.r.squared)
names(ret) <- c("window", site.focus)
return(ret)
}
# Get names of the site subset
site.subset <- read.csv('../STEP2_NDVI_EXTRACTION/Sites_Subset_20231010/ausplots_site_info/sites_subset.csv')
site.subset.names <- unique(site.subset$site_location_name)
site.name.focus <- 'TCATCH0006'
site.focus <- site.subset.names[which(site.subset.names == site.name.focus)] # pick a focus site
directory <- "C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/DataExtraction/BACKUP_DATA/ausplots_agcd"
values.test <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = site.name.focus,
directory = directory)))
View(values.test)
test.window <- function(window, site.focus, directory) {
precip.window <- apply_sliding_window(get_precip_data(site.focus,directory),
window)
colnames(precip.window)[1] <- 'date'
precip.window$date <- as.Date(precip.window$date)
# Visualise the dataset
site.greenness <- read.csv(paste0('../STEP6_PARAMETER_ENGINEERING/combined_data_', site.focus, '.csv'))
site.greenness$date <- as.Date(site.greenness$date)
test <- precip.window %>% full_join(site.greenness, by = 'date')
test <- test[order(test$date),]
rownames(test) <- 1:nrow(test)
test <- aggregate(test[,c('window.sum','NDVI', 'green_mean', 'pv', 'green')],
by = list(test$date), FUN = mean, na.rm = T)
ret <- c("window" =  window, summary(lm(pv ~ window.sum, test))$adj.r.squared)
name.score <- paste0(site.focus, ".adjusted.R2")
names(ret) <- c("window", name.score)
return(ret)
}
# Get names of the site subset
site.subset <- read.csv('../STEP2_NDVI_EXTRACTION/Sites_Subset_20231010/ausplots_site_info/sites_subset.csv')
site.subset.names <- unique(site.subset$site_location_name)
site.name.focus <- 'TCATCH0006'
site.focus <- site.subset.names[which(site.subset.names == site.name.focus)] # pick a focus site
directory <- "C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/DataExtraction/BACKUP_DATA/ausplots_agcd"
values.test <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = site.name.focus,
directory = directory)))
View(values.test)
first <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = site.name.focus,
directory = directory)))
for (ssn in site.subset.names){
}
first <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = site.subset.names[1],
directory = directory)))
for (ssn in site.subset.names[-1]){
site.r2 <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = ssn,
directory = directory)))
first <- cbind(first, site.2[,2])
}
# Test for a list of objects
site.subset <- read.csv('../STEP2_NDVI_EXTRACTION/Sites_Subset_20231010/ausplots_site_info/sites_subset.csv')
site.subset.names <- unique(site.subset$site_location_name)
exception <- "NSABHC0023"
site.subset.names <- site.subset.names[-which(site.subset.names == exception)]
first <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = site.subset.names[1],
directory = directory)))
for (ssn in site.subset.names[-1]){
site.r2 <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = ssn,
directory = directory)))
first <- cbind(first, site.2[,2])
}
first <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = site.subset.names[1],
directory = directory)))
for (ssn in site.subset.names[-1]){
site.r2 <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = ssn,
directory = directory)))
first <- cbind(first, site.r2[,2])
}
View(first)
first <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = site.subset.names[1],
directory = directory)))
for (ssn in site.subset.names[-1]){
site.r2 <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = ssn,
directory = directory)))
first <- cbind(first, ssn = site.r2[,2])
}
View(site.r2)
View(first)
first <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = site.subset.names[1],
directory = directory)))
for (ssn in site.subset.names[-1]){
site.r2 <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = ssn,
directory = directory)))
first <- cbind(first, site.r2[,2])
names(first)[length(names(first))] <- ssn
}
View(first)
first <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = site.subset.names[1],
directory = directory)))
for (ssn in site.subset.names[-1]){
site.r2 <- as.data.frame(t(sapply(1:10, FUN = test.window,
site.focus = ssn,
directory = directory)))
first <- cbind(first, site.r2[,2])
names(first)[length(names(first))] <- colnames(site.r2)[2]
}
View(first)
fit_linear_models <- function(site.names, window, site.focus,
directory = "C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/DataExtraction/BACKUP_DATA/ausplots_agcd"){
first <- as.data.frame(t(sapply(windows, FUN = test.window,
site.focus = site.subset.names[1],
directory = directory)))
for (ssn in site.subset.names[-1]){
site.r2 <- as.data.frame(t(sapply(windows, FUN = test.window,
site.focus = ssn,
directory = directory)))
first <- cbind(first, site.r2[,2])
names(first)[length(names(first))] <- colnames(site.r2)[2]
}
return(first)
}
fit_linear_models(site.subset.names, windows = 1:10)
fit_linear_models <- function(site.names, windows,
directory = "C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/DataExtraction/BACKUP_DATA/ausplots_agcd"){
first <- as.data.frame(t(sapply(windows, FUN = test.window,
site.focus = site.subset.names[1],
directory = directory)))
for (ssn in site.subset.names[-1]){
site.r2 <- as.data.frame(t(sapply(windows, FUN = test.window,
site.focus = ssn,
directory = directory)))
first <- cbind(first, site.r2[,2])
names(first)[length(names(first))] <- colnames(site.r2)[2]
}
return(first)
}
fit_linear_models(site.subset.names, windows = 1:10)
# Algorithm ---------------------------------------------------------------
directory <- "C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/DataExtraction/BACKUP_DATA/ausplots_agcd"
# Get names of the site subset
site.subset <- read.csv('../STEP2_NDVI_EXTRACTION/Sites_Subset_20231010/ausplots_site_info/sites_subset.csv')
site.subset.names <- unique(site.subset$site_location_name)
exception <- "NSABHC0023"
site.subset.names <- site.subset.names[-which(site.subset.names == exception)]
fit_linear_models(site.subset.names, windows = 1:10)
# Algorithm ---------------------------------------------------------------
# Output:
# - A precipitation dataset that has a sliding window, start date, and time lag applied to it
# Input:
# - Precipitation dataset
# Process:
# - Get precipitation dataset
# - Apply a sliding window to the dataset
# - Generate visualisations
# - Apply a time lag
# - Generate visualisations
# - Apply a start date
# - Generate visualisations
# Library -----------------------------------------------------------------
library(ncdf4)
library(zoo)
library(TSstudio)
library(dplyr)
# Functions ---------------------------------------------------------------
apply_sliding_window <- function(file, window){
test.zoo <- read.zoo(file, index.column = 'time')
window.sum <- rollapply(test.zoo, window, FUN = sum, na.rm = T, fill = NA, align = 'right')
return(fortify.zoo(window.sum))
}
get_precip_data <- function(site.focus, directory) {
precip.path <- file.path(directory, "precip")
nc.path <- file.path(precip.path, paste0(site.focus, "_1987_2022.nc"))
nc <- nc_open(filename = nc.path)
time.var <- ncvar_get(nc, "time")
dates <- as.Date(time.var, origin = "1850-01-01")
var <- ncvar_get(nc, 'precip')
daily.precip <- data.frame(precip = var, time = dates)
return(daily.precip)
}
test.window <- function(window, site.focus, directory) {
precip.window <- apply_sliding_window(get_precip_data(site.focus,directory),
window)
colnames(precip.window)[1] <- 'date'
precip.window$date <- as.Date(precip.window$date)
# Visualise the dataset
site.greenness <- read.csv(paste0('../STEP6_PARAMETER_ENGINEERING/combined_data_', site.focus, '.csv'))
site.greenness$date <- as.Date(site.greenness$date)
test <- precip.window %>% full_join(site.greenness, by = 'date')
test <- test[order(test$date),]
rownames(test) <- 1:nrow(test)
test <- aggregate(test[,c('window.sum','NDVI', 'green_mean', 'pv', 'green')],
by = list(test$date), FUN = mean, na.rm = T)
ret <- c("window" =  window, summary(lm(pv ~ window.sum, test))$adj.r.squared)
name.score <- paste0(site.focus, ".adjusted.R2")
names(ret) <- c("window", name.score)
return(ret)
}
fit_linear_models <- function(site.names, windows,
directory = "C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/DataExtraction/BACKUP_DATA/ausplots_agcd"){
first <- as.data.frame(t(sapply(windows, FUN = test.window,
site.focus = site.subset.names[1],
directory = directory)))
for (ssn in site.subset.names[-1]){
site.r2 <- as.data.frame(t(sapply(windows, FUN = test.window,
site.focus = ssn,
directory = directory)))
first <- cbind(first, site.r2[,2])
names(first)[length(names(first))] <- colnames(site.r2)[2]
}
return(first)
}
# Main --------------------------------------------------------------------
directory <- "C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/DataExtraction/BACKUP_DATA/ausplots_agcd"
# Get names of the site subset
site.subset <- read.csv('../STEP2_NDVI_EXTRACTION/Sites_Subset_20231010/ausplots_site_info/sites_subset.csv')
site.subset.names <- unique(site.subset$site_location_name)
exception <- "NSABHC0023"
site.subset.names <- site.subset.names[-which(site.subset.names == exception)]
# Get the precipitation data for the chosen site subset and apply window function
windows <- seq(1,365*3,5)
r2s <- fit_linear_models(site.subset.names, windows = windows)
View(r2s)
write.csv(r2s, "../DATASETS/linear_model_fitted_r2.csv")
r2s
plot(r2s$window, r2s$TCATCH0006.adjusted.R2)
with(r2s, plot(window, TCATCH0006.adjusted.R2)
with(r2s, plot(window, TCATCH0006.adjusted.R2))
?with
plot(r2s$window,r2s$WAAPIL0003.adjusted.R2)
plot(r2s$window,r2s$TCATCH0006.adjusted.R2)
plot(r2s$window,r2s$WAAGAS0002.adjusted.R2)
plot(r2s$window,r2s$NSAMDD0014.adjusted.R2)
plot(r2s$window,r2s$NTAGFU0021.adjusted.R2)
plot(r2s$window,r2s$NSANSS0001.adjusted.R2)
plot(r2s$window,r2s$SATSTP0005.adjusted.R2)
plot(r2s$window,r2s$QDASSD0015.adjusted.R2)
plot(r2s$window,r2s$NTAFIN0002.adjusted.R2)
plot(r2s$window,r2s$NSANAN0002.adjusted.R2)
plot(r2s$window,r2s$QDAEIU0010.adjusted.R2)
classifications <- read.csv("../DATASETS/AusPlots_Sites_Classified_2-0-6.csv")
classifications <- read.csv("../DATASETS/AusPlots_Sites_Classified_2-0-6.csv")
View(classifications)
classifications$vegetation_type
[classifications$site_location_name == 'WAAPIL0003']
[classifications$site_location_name == 'WAAPIL0003']
classifications$site_location_name == 'WAAPIL0003'
classifications[classifications$site_location_name == 'WAAPIL0003',]
classifications[classifications$site_location_name == 'WAAPIL0003',]$vegetation_type
classifications[classifications$site_location_name == 'WAAPIL0003',]$vegetation_type
classifications[classifications$site_location_name == 'WAAPIL0003',]$vegetation_type
classifications[classifications$site_location_name == 'TCATCH0006',]$vegetation_type
classifications[classifications$site_location_name == 'WAAGAS0002',]$vegetation_type
classifications[classifications$site_location_name == 'NSAMDD0014',]$vegetation_type
classifications[classifications$site_location_name == 'NTAGFU0021',]$vegetation_type
classifications[classifications$site_location_name == 'NSANSS0001',]$vegetation_type
plot(r2s$window,r2s$NTAGFU0021.adjusted.R2)
plot(r2s$window,r2s$NSANSS0001.adjusted.R2)
classifications[classifications$site_location_name == 'SATSTP0005',]$vegetation_type
classifications[classifications$site_location_name == 'QDASSD0015',]$vegetation_type
classifications[classifications$site_location_name == 'NTAFIN0002',]$vegetation_type
classifications[classifications$site_location_name == 'NSANAN0002',]$vegetation_type
classifications[classifications$site_location_name == 'QDAEIU0010',]$vegetation_type
plot(r2s$window,r2s$WAAPIL0003.adjusted.R2)
plot(r2s$window,r2s$TCATCH0006.adjusted.R2)
plot(r2s$window,r2s$WAAPIL0003.adjusted.R2)
plot(r2s$window,r2s$TCATCH0006.adjusted.R2)
plot(r2s$window,r2s$WAAGAS0002.adjusted.R2)
plot(r2s$window,r2s$NSAMDD0014.adjusted.R2)
plot(r2s$window,r2s$NTAGFU0021.adjusted.R2)
plot(r2s$window,r2s$NSANSS0001.adjusted.R2)
plot(r2s$window,r2s$QDASSD0015.adjusted.R2)
plot(r2s$window,r2s$NTAFIN0002.adjusted.R2)
plot(r2s$window,r2s$NSANAN0002.adjusted.R2)
plot(r2s$window,r2s$QDAEIU0010.adjusted.R2)
plot(r2s$window,r2s$NSANSS0001.adjusted.R2)
plot(r2s$window,r2s$NSANAN0002.adjusted.R2)
library('ausplotsR')
t <- get_ausplots("NTAGFU0021")
View(t)
t[["site.info"]][["longitude"]]
t[["site.info"]][["latitude"]]
t <- get_ausplots("NSANSS0001")
t[["site.info"]][["latitude"]]
t[["site.info"]][["longitude"]]
t <- get_ausplots('WAAPIL0003')
t[["site.info"]][["longitude"]]
t[["site.info"]][["latitude"]]
burn.date <- read.csv('../DATASETS/AusPlots_BurnDate.csv')
burn.reflectances <- read.csv('../DATASETS/AusPlots_BurnReflectances.csv')
View(burn.reflectances)
subset(burn.reflectances, subset = (site_location_name == 'NSANAN0002'))
NSANAN0002.Ref <- subset(burn.reflectances, subset = (site_location_name == 'NSANAN0002'))
plot(NSANAN0002.Ref$date, NSANAN0002.Ref$modis_swir)
NSANAN0002.Ref <- subset(burn.reflectances, subset = (site_location_name == 'NSANAN0002'))
plot(NSANAN0002.Ref$date, NSANAN0002.Ref$modis_swir)
NBR <- function(NIR, SWIR) {
return((NIR-SWIR)/(NIR+SWIR))
}
NBR.NSANAN0002 <- NBR(burn.reflectances$modis_nir, burn.reflectances$modis_swir)
plot(NSANAN0002.Ref$date, NSANAN0002.Ref$modis_swir)
library(TSstudio)
ts_plot(NBR.NSANAN0002[,c("date")],NBR.NSANAN0002)
NSANAN0002.Ref$NBR <- NBR(burn.reflectances$modis_nir, burn.reflectances$modis_swir)
burn.date <- read.csv('../DATASETS/AusPlots_BurnDate.csv')
burn.reflectances <- read.csv('../DATASETS/AusPlots_BurnReflectances.csv')
NSANAN0002.Ref <- subset(burn.reflectances, subset = (site_location_name == 'NSANAN0002'))
NSANAN0002.Ref$NBR <- NBR(burn.reflectances$modis_nir, burn.reflectances$modis_swir)
burn.date <- read.csv('../DATASETS/AusPlots_BurnDate.csv')
burn.reflectances <- read.csv('../DATASETS/AusPlots_BurnReflectances.csv')
NSANAN0002.Ref <- subset(burn.reflectances, subset = (site_location_name == 'NSANAN0002'))
NSANAN0002.Ref$NBR <- NBR(NSANAN0002.Ref$modis_nir, NSANAN0002.Ref$modis_swir)
ts_plot(NBR.NSANAN0002[,c("date", "NBR")])
NSANAN0002.Ref$date <- as.Date(NSANAN0002.Ref$date)
ts_plot(NBR.NSANAN0002[,c("date", "NBR")])
ts_plot(NSANAN0002.Ref[,c("date", "NBR")])
site.name <- 'NSANAN0002'
burn.date <- read.csv('../DATASETS/AusPlots_BurnDate.csv')
burn.reflectances <- read.csv('../DATASETS/AusPlots_BurnReflectances.csv')
site.focus <- subset(burn.reflectances, subset = (site_location_name == 'NSANAN0002'))
site.focus$NBR <- NBR(site.focus$modis_nir, site.focus$modis_swir)
site.focus$date <- as.Date(site.focus$date)
ts_plot(site.focus[,c("date", "NBR")])
plot_NBR(site.name){
plot_NBR(site.name){
plot_NBR(site.name) {
plot_NBR <- function(site.name) {
burn.date <- read.csv('../DATASETS/AusPlots_BurnDate.csv')
burn.reflectances <- read.csv('../DATASETS/AusPlots_BurnReflectances.csv')
site.focus <- subset(burn.reflectances, subset = (site_location_name ==  site.name))
site.focus$NBR <- NBR(site.focus$modis_nir, site.focus$modis_swir)
site.focus$date <- as.Date(site.focus$date)
return(ts_plot(site.focus[,c("date", "NBR")]))
}
plot_NBR('NSANAN0002')
plot_NBR('NSAMDD0014')
# Individual
site.name <- 'NSANAN0002'
burn.date <- read.csv('../DATASETS/AusPlots_BurnDate.csv')
burn.reflectances <- read.csv('../DATASETS/AusPlots_BurnReflectances.csv')
site.focus <- subset(burn.reflectances, subset = (site_location_name == 'NSANAN0002'))
site.focus$NBR <- NBR(site.focus$modis_nir, site.focus$modis_swir)
site.focus$date <- as.Date(site.focus$date)
ts_plot(site.focus[,c("date", "NBR")])
View(burn.reflectances)
View(NSANAN0002.Ref)
BAI <- function(RED, NIR) {
denominator <- (0.1 - RED)^2 + (0.06 - NIR)^2
return(1/denominator)
}
plot_BAI <- function(site.name) {
burn.date <- read.csv('../DATASETS/AusPlots_BurnDate.csv')
burn.reflectances <- read.csv('../DATASETS/AusPlots_BurnReflectances.csv')
site.focus <- subset(burn.reflectances, subset = (site_location_name ==  site.name))
site.focus$BAI <- BAI(site.focus$modis_red, site.focus$modis_nir)
site.focus$date <- as.Date(site.focus$date)
return(ts_plot(site.focus[,c("date", "NBR")]))
}
plot_BAI('NSANAN0002')
plot_BAI <- function(site.name) {
burn.date <- read.csv('../DATASETS/AusPlots_BurnDate.csv')
burn.reflectances <- read.csv('../DATASETS/AusPlots_BurnReflectances.csv')
site.focus <- subset(burn.reflectances, subset = (site_location_name ==  site.name))
site.focus$BAI <- BAI(site.focus$modis_red, site.focus$modis_nir)
site.focus$date <- as.Date(site.focus$date)
return(ts_plot(site.focus[,c("date", "BAI")]))
}
plot_BAI('NSANAN0002')
plot_BAI('NSANAN0002')
# Using function
plot_NBR('NSANAN0002')
View(NSANAN0002.Ref)
