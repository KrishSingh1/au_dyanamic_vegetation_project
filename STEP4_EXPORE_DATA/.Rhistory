trim_to_nearest_coord <- function(ausplots.info.i.index, veg.info, dea.fc.i ) {
# Site End Points:
W.site <- veg.info$site.info$pit_marker_easting[ausplots.info.i.index][1]
S.site <- veg.info$site.info$pit_marker_northing[ausplots.info.i.index][1]
N.site <- S.site + 100
E.site <- W.site + 100
#print(W.site)
# Remote End Points:
E.remote.incre <- unique(dea.fc.i$x)
N.remote.incre <- unique(dea.fc.i$y)
# Find Closest Points:
W.closest <- E.remote.incre[which.min(abs(E.remote.incre - W.site))]
E.closest <- E.remote.incre[which.min(abs(E.remote.incre - E.site))]
N.closest <- N.remote.incre[which.min(abs(N.remote.incre - N.site))]
S.closest <- N.remote.incre[which.min(abs(N.remote.incre - S.site))]
#print(W.closest)
#print(E.closest)
#print(N.closest)
#print(S.closest)
# Trim dataset:
trimmed <- subset(dea.fc.i, subset = (x >= W.closest & x <= E.closest &
y >= S.closest & y <= N.closest))
#print(unique(trimmed$x))
#print(unique(trimmed$y))
return(trimmed)
}
###### Load Dataset ######
# "NSTSYB0002" is 81
# 'NTABRT0001' is  94
RI = 81 # record index
files <- list.files(directory, pattern = "\\.csv$", full.names = FALSE)
file.names <- tools::file_path_sans_ext(files)
site.path <- paste(directory,files[RI],sep = "")
dea.data <- read.csv(site.path)
veg.info <- readRDS("../STEP2_VEG_EXTRACTION/site_veg.rds")
site.info.data <- veg.info$site.info
site.info.index <- which(site.info.data$site_location_name == file.names[RI])
site.info.data <- site.info.data[site.info.index,]
insitu.fractional.cover <- readRDS("AusPlots_fractional_cover.rds")
ausplots.fc <- insitu.fractional.cover[grep(file.names[RI], insitu.fractional.cover$site_unique),]
site.info.data <- merge(ausplots.fc, site.info.data, by = 'site_unique')
dea.data <- trim_to_nearest_coord(site.info.index, veg.info, dea.data)
###### Visualise The Data ######
dea.data.agg <- aggregate(dea.data, by = list(dea.data$time),
FUN = mean, na.rm = T)
posit.date <- as.POSIXlt(dea.data.agg$Group.1) # for use for a later section: smoothing time series
dea.data.agg$Group.1 <- as.Date(dea.data.agg$Group.1)
## Get essential data from Ausplots
site.info.data.essen <- site.info.data[,c("visit_start_date", "bare",
"brown", "green" )]
site.info.data.essen$visit_start_date <- as.Date(site.info.data.essen$visit_start_date)
colnames(site.info.data.essen) <- colnames(
dea.data.agg[,c("Group.1","bs","npv","pv")]
)
dea.data.agg.essen <- dea.data.agg[,c("Group.1","bs","npv","pv", "ue")]
time.sequence <- data.frame(Group.1 =  seq(from = min(dea.data.agg.essen$Group.1), to = max(dea.data.agg.essen$Group.1), by='8 days'))
merged.data <- dea.data.agg.essen %>% full_join(time.sequence)
merged.data$Group.1 <- as.Date(merged.data$Group.1)
merged.data <- merged.data %>% arrange(Group.1)
## Using ggplotly
pl <- ggplot(dea.data.agg.essen, aes(x = Group.1)) +
geom_line(mapping = aes(y = bs, colour = "bs")) +
geom_line(mapping = aes(y = npv, colour = "npv")) +
geom_line(mapping = aes(y = pv, colour = "pv")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
xlab("Time") +
ylab("Colour Intensity") +
labs(title = file.names[RI]) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bs.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "npv.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
p <- ggplotly(pl) %>%
rangeslider()
p
## Adding precipitation data
precip.NSTSYB002 <- read.csv('Precip_NSTSYB0002_1987_2022.csv')
precip.NSTSYB002$time <- as.Date(precip.NSTSYB002$time)
colnames(precip.NSTSYB002)[which(colnames(precip.NSTSYB002) == 'time')] <- 'Group.1'
save.colnames <- colnames(precip.NSTSYB002)
precip.NSTSYB002$time <- as.Date(precip.NSTSYB002$Group.1)
temp <- predict(preProcess(as.data.frame(precip.NSTSYB002$window.sum.16), method = 'range'),
as.data.frame(precip.NSTSYB002$window.sum.16)) * 100
precip.NSTSYB002$window.sum.16 <- temp$`precip.NSTSYB002$window.sum.16`
temp <- predict(preProcess(as.data.frame(precip.NSTSYB002$precip), method = 'range'),
as.data.frame(precip.NSTSYB002$precip)) * 100
precip.NSTSYB002$precip <- temp$`precip.NSTSYB002$precip`
dea.data.agg.essen.precip <- merge(dea.data.agg.essen, precip.NSTSYB002, by = 'Group.1')
## Using ggplotly
pl <- ggplot(dea.data.agg.essen.precip, aes(x = Group.1)) +
geom_line(mapping = aes(y = precip, colour = "precip")) +
geom_line(mapping = aes(y = window.sum.16, colour = "precip.sum")) +
geom_line(mapping = aes(y = bs, colour = "bs")) +
geom_line(mapping = aes(y = npv, colour = "npv")) +
geom_line(mapping = aes(y = pv, colour = "pv")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
xlab("Time") +
ylab("Colour Intensity") +
labs(title = file.names[RI]) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bs.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "npv.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen", "precip" = "lightblue",
"precip.sum" = "cyan")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
p <- ggplotly(pl) %>%
rangeslider()
p
## Using ggplotly
pl <- ggplot(dea.data.agg.essen.precip, aes(x = Group.1)) +
geom_line(mapping = aes(y = precip, colour = "precip")) +
geom_line(mapping = aes(y = window.sum.16, colour = "precip.sum")) +
geom_line(mapping = aes(y = bs, colour = "bs")) +
geom_line(mapping = aes(y = npv, colour = "npv")) +
geom_line(mapping = aes(y = pv, colour = "pv")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
xlab("Time") +
ylab("Colour Intensity") +
labs(title = file.names[RI]) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bs.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "npv.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen", "precip" = "lightblue",
"precip.sum" = "cyan")) +
sec_axis("Precipitation (mm)") +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
## Using ggplotly
pl <- ggplot(dea.data.agg.essen.precip, aes(x = Group.1)) +
geom_line(mapping = aes(y = precip, colour = "precip")) +
geom_line(mapping = aes(y = window.sum.16, colour = "precip.sum")) +
geom_line(mapping = aes(y = bs, colour = "bs")) +
geom_line(mapping = aes(y = npv, colour = "npv")) +
geom_line(mapping = aes(y = pv, colour = "pv")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
xlab("Time") +
ylab("Colour Intensity") +
labs(title = file.names[RI]) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bs.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "npv.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen", "precip" = "lightblue",
"precip.sum" = "cyan")) +
sec_axis(name = "Precipitation (mm)") +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
## Using ggplotly
pl <- ggplot(dea.data.agg.essen.precip, aes(x = Group.1)) +
geom_line(mapping = aes(y = precip, colour = "precip")) +
geom_line(mapping = aes(y = window.sum.16, colour = "precip.sum")) +
geom_line(mapping = aes(y = bs, colour = "bs")) +
geom_line(mapping = aes(y = npv, colour = "npv")) +
geom_line(mapping = aes(y = pv, colour = "pv")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
xlab("Time") +
ylab("Colour Intensity") +
labs(title = file.names[RI]) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bs.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "npv.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen", "precip" = "lightblue",
"precip.sum" = "cyan")) +
sec_axis(trans = ~.*1,name = "Precipitation (mm)") +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
## Using ggplotly
pl <- ggplot(dea.data.agg.essen.precip, aes(x = Group.1)) +
geom_line(mapping = aes(y = precip, colour = "precip")) +
geom_line(mapping = aes(y = window.sum.16, colour = "precip.sum")) +
geom_line(mapping = aes(y = bs, colour = "bs")) +
geom_line(mapping = aes(y = npv, colour = "npv")) +
geom_line(mapping = aes(y = pv, colour = "pv")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
xlab("Time") +
ylab("Colour Intensity") +
labs(title = file.names[RI]) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bs.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "npv.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen", "precip" = "lightblue",
"precip.sum" = "cyan")) +
scale_y_continous (sec.axis = sec_axis(trans = ~.*1,name = "Precipitation (mm)")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
## Using ggplotly
pl <- ggplot(dea.data.agg.essen.precip, aes(x = Group.1)) +
geom_line(mapping = aes(y = precip, colour = "precip")) +
geom_line(mapping = aes(y = window.sum.16, colour = "precip.sum")) +
geom_line(mapping = aes(y = bs, colour = "bs")) +
geom_line(mapping = aes(y = npv, colour = "npv")) +
geom_line(mapping = aes(y = pv, colour = "pv")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
xlab("Time") +
ylab("Colour Intensity") +
labs(title = file.names[RI]) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bs.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "npv.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen", "precip" = "lightblue",
"precip.sum" = "cyan")) +
scale_y_continous(sec.axis = sec_axis(trans = ~.*1,name = "Precipitation (mm)")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
p <- ggplotly(pl) %>%
rangeslider()
p
pl
?dup_axis
## Using ggplotly
pl <- ggplot(dea.data.agg.essen.precip, aes(x = Group.1)) +
geom_line(mapping = aes(y = precip, colour = "precip")) +
geom_line(mapping = aes(y = window.sum.16, colour = "precip.sum")) +
geom_line(mapping = aes(y = bs, colour = "bs")) +
geom_line(mapping = aes(y = npv, colour = "npv")) +
geom_line(mapping = aes(y = pv, colour = "pv")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
xlab("Time") +
ylab("Colour Intensity") +
labs(title = file.names[RI]) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bs.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "npv.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen", "precip" = "lightblue",
"precip.sum" = "cyan")) +
scale_y_continous(sec.axis = dup_axis(,name = "Precipitation (mm)")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
## Using ggplotly
pl <- ggplot(dea.data.agg.essen.precip, aes(x = Group.1)) +
geom_line(mapping = aes(y = precip, colour = "precip")) +
geom_line(mapping = aes(y = window.sum.16, colour = "precip.sum")) +
geom_line(mapping = aes(y = bs, colour = "bs")) +
geom_line(mapping = aes(y = npv, colour = "npv")) +
geom_line(mapping = aes(y = pv, colour = "pv")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
xlab("Time") +
ylab("Colour Intensity") +
labs(title = file.names[RI]) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bs.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "npv.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen", "precip" = "lightblue",
"precip.sum" = "cyan")) +
scale_y_continuous(sec.axis = dup_axis(,name = "Precipitation (mm)")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
pl
p <- ggplotly(pl) %>%
rangeslider()
p
## Using ggplotly
pl <- ggplot(dea.data.agg.essen.precip, aes(x = Group.1)) +
geom_line(mapping = aes(y = precip, colour = "precip")) +
geom_line(mapping = aes(y = window.sum.16, colour = "precip.sum")) +
geom_line(mapping = aes(y = bs, colour = "bs")) +
geom_line(mapping = aes(y = npv, colour = "npv")) +
geom_line(mapping = aes(y = pv, colour = "pv")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
xlab("Time") +
ylab("Colour Intensity") +
labs(title = file.names[RI]) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bs.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "npv.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen", "precip" = "lightblue",
"precip.sum" = "cyan")) +
scale_y_continuous(sec.axis = dup_axis(name = "Precipitation (mm)")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
p <- ggplotly(pl) %>%
rangeslider()
p
second_axis <- list(
tickfont = list(size=11.7),
titlefont=list(size=14.6),
overlaying = "y",
nticks = 5,
side = "right",
title = "precipitation"
)
ggplotly(pl) %>%
add_lines(x=~Group.1, y=~precip, colors=NULL, yaxis="y2",
data=DF, showlegend=FALSE, inherit=FALSE) %>%
layout(yaxis2 = ay)
ggplotly(pl) %>%
add_lines(x=~Group.1, y=~precip, colors=NULL, yaxis="y2", showlegend=FALSE, inherit=FALSE) %>%
layout(yaxis2 = ay)
second_axis <- list(
tickfont = list(size=11.7),
titlefont=list(size=14.6),
overlaying = "y",
nticks = 5,
side = "right",
title = "precipitation"
)
ggplotly(pl) %>%
add_lines(x=~Group.1, y=~precip, colors=NULL, yaxis="y2", showlegend=FALSE, inherit=FALSE) %>%
layout(yaxis2 = second_axis)
second_axis <- list(
tickfont = list(size=11.7),
titlefont=list(size=14.6),
overlaying = "y",
nticks = 5,
side = "right",
title = "precipitation"
)
ggplotly(pl)  %>%
layout(yaxis2 = second_axis)
ggplotly(pl) %>%
add_lines(x=~Group.1, y=~precip, colors=NULL, yaxis="y2", showlegend=FALSE, inherit=FALSE) %>%
layout(yaxis2 = second_axis) %>%
rangeslider()
second_axis <- list(
tickfont = list(size=11.7),
titlefont=list(size=14.6),
overlaying = "y",
side = "right",
title = "precipitation"
)
ggplotly(pl) %>%
add_lines(x=~Group.1, y=~precip, colors=NULL, yaxis="y2", showlegend=FALSE, inherit=FALSE) %>%
layout(yaxis2 = second_axis) %>%
rangeslider()
p <- ggplotly(pl) %>%
rangeslider()
second_axis <- list(
overlaying = "y",
side = "right",
title = "precipitation"
)
ggplotly(pl) %>%
add_lines(x=~Group.1, y=~precip, colors=NULL, yaxis="y2", showlegend=FALSE, inherit=FALSE) %>%
layout(yaxis2 = second_axis) %>%
rangeslider()
p <- ggplotly(pl) %>%
rangeslider()
p <- ggplotly(pl) %>%
rangeslider()
## Using ggplotly
pl <- ggplot(dea.data.agg.essen.precip, aes(x = Group.1)) +
geom_line(mapping = aes(y = precip, colour = "precip")) +
geom_line(mapping = aes(y = window.sum.16, colour = "precip.sum")) +
geom_line(mapping = aes(y = bs, colour = "bs")) +
geom_line(mapping = aes(y = npv, colour = "npv")) +
geom_line(mapping = aes(y = pv, colour = "pv")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
xlab("Time") +
ylab("Colour Intensity") +
labs(title = file.names[RI]) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bs.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "npv.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen", "precip" = "lightblue",
"precip.sum" = "cyan")) +
scale_y_continuous(sec.axis = dup_axis(name = "Precipitation (mm)")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
pl
p <- ggplotly(pl) %>%
rangeslider()
plotly(pl)
?plotly
ggplotly(pl)
p <- ggplotly(pl) %>%
rangeslider()
p
## Using ggplotly
pl <- ggplot(dea.data.agg.essen.precip, aes(x = Group.1)) +
geom_line(mapping = aes(y = precip, colour = "precip")) +
geom_line(mapping = aes(y = window.sum.16, colour = "precip.sum")) +
geom_line(mapping = aes(y = bs, colour = "bs")) +
geom_line(mapping = aes(y = npv, colour = "npv")) +
geom_line(mapping = aes(y = pv, colour = "pv")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
xlab("Time") +
ylab("Intensity") +
labs(title = file.names[RI]) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bs.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "npv.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Timeseries",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen", "precip" = "lightblue",
"precip.sum" = "cyan")) +
scale_y_continuous(sec.axis = dup_axis(name = "Precipitation (mm)")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
pl
p <- ggplotly(pl) %>%
rangeslider()
p
