veg.info$site.info$pit_marker_northing[ausplots.info.i.index],
dea.fc.nearest.t)
plot_site_markings(veg.info$site.info$pit_marker_easting[ausplots.info.i.index],
veg.info$site.info$pit_marker_northing[ausplots.info.i.index],
dea.fc.nearest)
plot_site_markings(veg.info$site.info$pit_marker_easting[ausplots.info.i.index],
veg.info$site.info$pit_marker_northing[ausplots.info.i.index],
dea.fc.nearest.t)
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/DEA_Data_Explore_Adv.R", echo=TRUE)
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/DEA_Data_Explore_Adv.R", echo=TRUE)
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/DEA_Data_Explore_Adv.R", echo=TRUE)
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Bare
ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Brown
ggplot(dea.fc.sites.plotting, aes(y = npv, x = brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
View(dea.fc.sites.plotting.1)
View(dea.fc.sites.plotting)
plot_site_markings(veg.info$site.info$pit_marker_easting[ausplots.info.i.index],
veg.info$site.info$pit_marker_northing[ausplots.info.i.index],
dea.fc.nearest)
plot_site_markings(veg.info$site.info$pit_marker_easting[ausplots.info.i.index[1]],
veg.info$site.info$pit_marker_northing[ausplots.info.i.index[1]],
dea.fc.nearest)
View(dea.fc.nearest)
unique(dea.fc.nearest)
unique(dea.fc.nearest$x)
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Bare
ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Brown
ggplot(dea.fc.sites.plotting, aes(y = npv, x = brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Bare
ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Brown
ggplot(dea.fc.sites.plotting, aes(y = npv, x = brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/DEA_Data_Explore_Adv.R", echo=TRUE)
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/DEA_Data_Explore_Adv.R", echo=TRUE)
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/DEA_Data_Explore_Adv.R", echo=TRUE)
nrow(dea.fc.nearest)
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/DEA_Data_Explore_Adv.R", echo=TRUE)
View(subsetter)
View(veg.info)
veg.info$site.info$site_unique[ausplots.info.i.index]
E.remote.incre[which.min(abs(E.remote.incre - W.site))]
abs(E.remote.incre - W.site))
abs(E.remote.incre - W.site))
abs(E.remote.incre - W.site)
View(trimmed)
View(dea.fc.nearest)
View(dea.fc.agg.nearest)
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/DEA_Data_Explore_Adv.R", echo=TRUE)
View(dea.fc.sites.plotting)
dea.fc.sites.plotting <- subset(dea.fc.sites.nearest, subset = (npixels > 100 & npixels <= 121))
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
View(dea.fc.sites.plotting)
dea.fc.sites.nearest <- read.csv("dea_fc_sites_nearest_pixel_inc.csv")
dea.fc.sites.plotting <- merge(dea.fc.sites.nearest, insitu.fractional.cover, by = 'site_unique')
dea.fc.sites.plotting <- subset(dea.fc.sites.plotting, subset = (npixels > 100 & npixels <= 121))
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Bare
ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Brown
ggplot(dea.fc.sites.plotting, aes(y = npv, x = brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Bare
ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Brown
ggplot(dea.fc.sites.plotting, aes(y = npv, x = brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Bare
ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Brown
ggplot(dea.fc.sites.plotting, aes(y = npv, x = brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
RI = 453 # record index
directory <- "/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/DataExtraction/BACKUP_DATA/csv_files"
files <- list.files(directory, pattern = "\\.csv$", full.names = FALSE)
file.names <- tools::file_path_sans_ext(files)
site.path <- paste(directory,files[RI],sep = "")
dea.fc <- read.csv(site.path)
site.path <- file.path(directory, files[RI], ".csv"))
site.path <- file.path(directory, files[RI], ".csv")
site.path <- file.path(directory, paste(files[RI], ".csv"))
dea.fc <- read.csv(site.path)
site.path <- file.path(directory, files[RI])
dea.fc <- read.csv(site.path)
dea.fc.agg <- aggregate(dea.fc, by = list(dea.data.satflb0004$time), FUN = mean, na.rm = T)
dea.fc.agg <- aggregate(dea.fc, by = list(dea.fc$time), FUN = mean, na.rm = T)
fc <- fractional_cover(veg.PI = veg.info$veg.PI)
visually explore the alignment of AusPlots and DEA data.
debug <- F
debug_msg <- function(msg) {
if (debug) {
print(msg)
}
}
library(ausplotsR)
directory <- "/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/DataExtraction/BACKUP_DATA/csv_files"
files <- list.files(directory, pattern = "\\.csv$", full.names = FALSE)
fileNames <- tools::file_path_sans_ext(files)
veg.info <- readRDS("../STEP2_VEG_EXTRACTION/site_veg.rds")
insitu.fractional.cover <- readRDS("AusPlots_fractional_cover.rds")
dea.fc.sites.nearest <- read.csv("dea_fc_sites_nearest_pixel_inc.csv")
fc <- fractional_cover(veg.PI = veg.info$veg.PI)
dea.fc.sites.plotting <- merge(dea.fc.sites.nearest, fc, by = 'site_unique')
dea.fc.sites.plotting <- subset(dea.fc.sites.plotting, subset = (npixels > 100 & npixels <= 121))
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Brown
ggplot(dea.fc.sites.plotting, aes(y = npv, x = brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
fc <- fractional_cover(veg.PI = veg.info$veg.PI, ground_fractional = "TRUE")
dea.fc.sites.plotting <- merge(dea.fc.sites.nearest, fc, by = 'site_unique')
dea.fc.sites.plotting <- subset(dea.fc.sites.plotting, subset = (npixels > 100 & npixels <= 121))
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Brown
ggplot(dea.fc.sites.plotting, aes(y = npv, x = brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Brown
ggplot(dea.fc.sites.plotting, aes(y = npv, x = brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
fc <- fractional_cover(veg.PI = veg.info$veg.PI, ground_fractional = "TRUE", in_canopy_sky = "TRUE")
dea.fc.sites.plotting <- merge(dea.fc.sites.nearest, fc, by = 'site_unique')
dea.fc.sites.plotting <- subset(dea.fc.sites.plotting, subset = (npixels > 100 & npixels <= 121))
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Brown
ggplot(dea.fc.sites.plotting, aes(y = npv, x = brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
dea.fc.sites.plotting <- merge(dea.fc.sites.nearest, fc, by = 'site_unique')
dea.fc.sites.plotting <- subset(dea.fc.sites.plotting, subset = (npixels > 100 & npixels <= 121))
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Brown
ggplot(dea.fc.sites.plotting, aes(y = npv, x = brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
dea.fc.sites.nearest <- read.csv("dea_fc_sites_nearest_pixel_inc.csv")
dea.fc.sites.plotting <- merge(dea.fc.sites.nearest, insitu.fractional.cover, by = 'site_unique')
dea.fc.sites.plotting <- subset(dea.fc.sites.plotting, subset = (npixels > 100 & npixels <= 121))
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Bare
ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Brown
ggplot(dea.fc.sites.plotting, aes(y = npv, x = brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Bare
ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Brown
ggplot(dea.fc.sites.plotting, aes(y = npv, x = brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + geom_line()
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + geom_smooth()
# Bare
ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + geom_smooth()
# Brown
ggplot(dea.fc.sites.plotting, aes(y = npv, x = brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + geom_smooth()
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + geom_smooth()
# Bare
ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + geom_smooth()
# Bare
ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + geom_smooth()
###### AusPlots Vegetation Data exploration advanced ######
## Author: Krish Singh
## Date: 230824
## Purpose: To explore the data in AusPlots focusing on temporal variation
library(ausplotsR)
library(reshape2)
library(ggplot2)
library(dplyr)
library(plotly)
veg.info <- readRDS("../STEP2_VEG_EXTRACTION/site_veg.rds")
growth.form <- readRDS("growth_form_matrix.rds")
growth.form.strata <- growth_form_table(veg.info$veg.PI, m_kind = "percent_cover",
cumulative = FALSE, by_strata = TRUE)
insitu.fractional.cover <- readRDS("AusPlots_fractional_cover.rds")
site.names <- unique(veg.info$site.info$site_location_name)
site.observations <- unique(veg.info$site.info$site_unique)
# Count the number of observations of each site
df <- as.data.frame(t(data.frame(purrr::flatten(lapply(site.observations, strsplit, '-')))))
counts <- c()
for (n in site.names){
counts <- c(counts, sum(df$V1 == n))
}
counts.df <- data.frame(site.names, counts)
sites.revisit.df <- subset(counts.df, counts > 1) # For all revisited data
sites.revisit.2.df <- subset(counts.df, counts == 2) # For sites that were only visited twice
info <- as.data.frame(veg.info$site.info)[,c("site_location_name", "visit_start_date", "site_unique")]
info.revisit.2 <- subset(info, subset = (site_location_name %in% sites.revisit.2.df$site.names))
info.revisit.2$visit_start_date <- as.Date(info.revisit.2$visit_start_date)
info.revisit.2.sorted <- info.revisit.2 %>% arrange(+visit_start_date)
indexes <- c()
for (n in sites.revisit.2.df$site.names){
indexes <- c(indexes, which(info.revisit.2.sorted$site_location_name == n)[1])
}
info.revisit.2.t1 <- info.revisit.2.sorted[indexes,]
info.revisit.2.t2 <- info.revisit.2.sorted[-indexes,]
growth.form$site_unique <- rownames(growth.form)
growth.form.df <- melt(growth.form, id = "site_unique",
variable.name = "growth.form", value.name = "occurance")
growth.form.df.t1 <- merge(growth.form.df, info.revisit.2.t1, by = 'site_unique')
growth.form.df.t2 <- merge(growth.form.df, info.revisit.2.t2, by = 'site_unique')
length(unique(growth.form.df.t1$site_location_name))
length(unique(growth.form.df.t2$site_location_name))
missing_location.t1 <- setdiff(unique(growth.form.df.t1$site_location_name),
unique(growth.form.df.t2$site_location_name))
missing_location.t2 <- setdiff(unique(growth.form.df.t2$site_location_name),
unique(growth.form.df.t1$site_location_name))
growth.form.df.t1.filtered <-subset(growth.form.df.t1,
subset = !(site_location_name %in% missing_location.t1)) %>%
arrange(site_location_name, growth.form)
growth.form.df.t2.filtered <-subset(growth.form.df.t2,
subset = !(site_location_name %in% missing_location.t2)) %>%
arrange(site_location_name, growth.form)
# Check if the column values for growth form and site_location_name are identitcal
all(growth.form.df.t1.filtered$growth.form == growth.form.df.t2.filtered$growth.form) ==
all(growth.form.df.t1.filtered$site_location_name == growth.form.df.t2.filtered$site_location_name)
growth.form.change.df <- merge(growth.form.df.t1.filtered, growth.form.df.t2.filtered, by = c("site_location_name", "growth.form"))
change.p <- ggplot(growth.form.change.df ,map = aes(x = occurance.x, y = occurance.y,
colour =  growth.form)) + geom_point() + geom_abline()
ggplotly(change.p, tooltip = c("occurance.x", "occurance.y",
"growth.form", "visit_start_date.x",
"visit_start_date.y"))
change.p <- ggplot(growth.form.change.df ,map = aes(x = occurance.x, y = occurance.y,
colour =  growth.form)) + geom_point() + geom_abline() + geom_smooth()
ggplotly(change.p, tooltip = c("occurance.x", "occurance.y",
"growth.form", "visit_start_date.x",
"visit_start_date.y"))
ggplotly(change.p, tooltip = c("occurance.x", "occurance.y",
"growth.form", "visit_start_date.x",
"visit_start_date.y"))
growth.form.strata$site_unique <- rownames(growth.form.strata)
growth.form.starta.df <- melt(growth.form.strata, id = "site_unique",
variable.name = "strata", value.name = "percentage_cover")
growth.form.strata.t1 <- merge(growth.form.starta.df,
info.revisit.2.t1, by = 'site_unique')
growth.form.strata.t2 <- merge(growth.form.starta.df,
info.revisit.2.t2, by = 'site_unique')
missing_location.t1 <- setdiff(unique(growth.form.strata.t1$site_location_name), unique(growth.form.strata.t2$site_location_name))
missing_location.t2 <- setdiff(unique(growth.form.strata.t2$site_location_name), unique(growth.form.strata.t1$site_location_name))
growth.form.strata.t1.filtered <-subset(growth.form.strata.t1, subset = !(site_location_name %in% missing_location.t1)) %>%
arrange(site_location_name, strata)
growth.form.strata.t2.filtered <-subset(growth.form.strata.t2, subset = !(site_location_name %in% missing_location.t2)) %>%
arrange(site_location_name, strata)
growth.form.strata.change <- merge(growth.form.strata.t1, growth.form.strata.t2, by = c("site_location_name", "strata"))
change.p <- ggplot(growth.form.strata.change,
map = aes(x = percentage_cover.x, y = percentage_cover.y,
colour =  strata)) + geom_point() + geom_abline()
ggplotly(change.p)
?growth_form_table
change.p <- ggplot(growth.form.strata.change ,map = aes(x = percentage_cover.x, y = percentage_cover.y,
colour =  strata)) + geom_point() + geom_abline() +
facet_grid(~strata)
ggplotly(change.p)
library(ausplotsR)
library(reshape2)
library(ggplot2)
library(dplyr)
library(plotly)
veg.info <- readRDS("../STEP2_VEG_EXTRACTION/site_veg.rds")
growth.form <- readRDS("growth_form_matrix.rds")
growth.form.strata <- growth_form_table(veg.info$veg.PI, m_kind = "percent_cover",
cumulative = FALSE, by_strata = TRUE)
insitu.fractional.cover <- readRDS("AusPlots_fractional_cover.rds")
site.names <- unique(veg.info$site.info$site_location_name)
site.observations <- unique(veg.info$site.info$site_unique)
# Count the number of observations of each site
df <- as.data.frame(t(data.frame(purrr::flatten(lapply(site.observations, strsplit, '-')))))
counts <- c()
for (n in site.names){
counts <- c(counts, sum(df$V1 == n))
}
counts.df <- data.frame(site.names, counts)
sites.revisit.df <- subset(counts.df, counts > 1) # For all revisited data
sites.revisit.2.df <- subset(counts.df, counts == 2) # For sites that were only visited twice
info <- as.data.frame(veg.info$site.info)[,c("site_location_name", "visit_start_date", "site_unique")]
info.revisit.2 <- subset(info, subset = (site_location_name %in% sites.revisit.2.df$site.names))
info.revisit.2$visit_start_date <- as.Date(info.revisit.2$visit_start_date)
info.revisit.2.sorted <- info.revisit.2 %>% arrange(+visit_start_date)
indexes <- c()
for (n in sites.revisit.2.df$site.names){
indexes <- c(indexes, which(info.revisit.2.sorted$site_location_name == n)[1])
}
info.revisit.2.t1 <- info.revisit.2.sorted[indexes,]
info.revisit.2.t2 <- info.revisit.2.sorted[-indexes,]
growth.form$site_unique <- rownames(growth.form)
growth.form.df <- melt(growth.form, id = "site_unique",
variable.name = "growth.form", value.name = "occurance")
growth.form.df.t1 <- merge(growth.form.df, info.revisit.2.t1, by = 'site_unique')
growth.form.df.t2 <- merge(growth.form.df, info.revisit.2.t2, by = 'site_unique')
length(unique(growth.form.df.t1$site_location_name))
length(unique(growth.form.df.t2$site_location_name))
missing_location.t1 <- setdiff(unique(growth.form.df.t1$site_location_name),
unique(growth.form.df.t2$site_location_name))
missing_location.t2 <- setdiff(unique(growth.form.df.t2$site_location_name),
unique(growth.form.df.t1$site_location_name))
growth.form.df.t1.filtered <-subset(growth.form.df.t1,
subset = !(site_location_name %in% missing_location.t1)) %>%
arrange(site_location_name, growth.form)
growth.form.df.t2.filtered <-subset(growth.form.df.t2,
subset = !(site_location_name %in% missing_location.t2)) %>%
arrange(site_location_name, growth.form)
# Check if the column values for growth form and site_location_name are identitcal
all(growth.form.df.t1.filtered$growth.form == growth.form.df.t2.filtered$growth.form) ==
all(growth.form.df.t1.filtered$site_location_name == growth.form.df.t2.filtered$site_location_name)
growth.form.change.df <- merge(growth.form.df.t1.filtered, growth.form.df.t2.filtered, by = c("site_location_name", "growth.form"))
View(growth.form.change.df)
library(ausplotsR)
library(reshape2)
library(ggplot2)
library(dplyr)
library(plotly)
veg.info <- readRDS("../STEP2_VEG_EXTRACTION/site_veg.rds")
growth.form <- readRDS("growth_form_matrix.rds")
growth.form.strata <- growth_form_table(veg.info$veg.PI, m_kind = "percent_cover",
cumulative = FALSE, by_strata = TRUE)
insitu.fractional.cover <- readRDS("AusPlots_fractional_cover.rds")
site.names <- unique(veg.info$site.info$site_location_name)
site.observations <- unique(veg.info$site.info$site_unique)
# Count the number of observations of each site
df <- as.data.frame(t(data.frame(purrr::flatten(lapply(site.observations, strsplit, '-')))))
counts <- c()
for (n in site.names){
counts <- c(counts, sum(df$V1 == n))
}
counts.df <- data.frame(site.names, counts)
sites.revisit.df <- subset(counts.df, counts > 1) # For all revisited data
sites.revisit.2.df <- subset(counts.df, counts == 2) # For sites that were only visited twice
info <- as.data.frame(veg.info$site.info)[,c("site_location_name", "visit_start_date", "site_unique")]
info.revisit.2 <- subset(info, subset = (site_location_name %in% sites.revisit.2.df$site.names))
info.revisit.2$visit_start_date <- as.Date(info.revisit.2$visit_start_date)
info.revisit.2.sorted <- info.revisit.2 %>% arrange(+visit_start_date)
indexes <- c()
for (n in sites.revisit.2.df$site.names){
indexes <- c(indexes, which(info.revisit.2.sorted$site_location_name == n)[1])
}
info.revisit.2.t1 <- info.revisit.2.sorted[indexes,]
info.revisit.2.t2 <- info.revisit.2.sorted[-indexes,]
growth.form$site_unique <- rownames(growth.form)
growth.form.df <- melt(growth.form, id = "site_unique",
variable.name = "growth.form", value.name = "occurance")
growth.form.df.t1 <- merge(growth.form.df, info.revisit.2.t1, by = 'site_unique')
growth.form.df.t2 <- merge(growth.form.df, info.revisit.2.t2, by = 'site_unique')
length(unique(growth.form.df.t1$site_location_name))
length(unique(growth.form.df.t2$site_location_name))
missing_location.t1 <- setdiff(unique(growth.form.df.t1$site_location_name),
unique(growth.form.df.t2$site_location_name))
missing_location.t2 <- setdiff(unique(growth.form.df.t2$site_location_name),
unique(growth.form.df.t1$site_location_name))
growth.form.df.t1.filtered <-subset(growth.form.df.t1,
subset = !(site_location_name %in% missing_location.t1)) %>%
arrange(site_location_name, growth.form)
growth.form.df.t2.filtered <-subset(growth.form.df.t2,
subset = !(site_location_name %in% missing_location.t2)) %>%
arrange(site_location_name, growth.form)
# Check if the column values for growth form and site_location_name are identitcal
all(growth.form.df.t1.filtered$growth.form == growth.form.df.t2.filtered$growth.form) ==
all(growth.form.df.t1.filtered$site_location_name == growth.form.df.t2.filtered$site_location_name)
growth.form.change.df <- merge(growth.form.df.t1.filtered, growth.form.df.t2.filtered, by = c("site_location_name", "growth.form"))
?growth_form_table
### Plot 1: Individual growth forms
change.p <- ggplot(growth.form.change.df ,map = aes(x = occurance.x, y = occurance.y,
colour =  growth.form)) + geom_point() + geom_abline() + geom_smooth()
ggplotly(change.p, tooltip = c("occurance.x", "occurance.y",
"growth.form", "visit_start_date.x",
"visit_start_date.y"))
growth.form.strata$site_unique <- rownames(growth.form.strata)
growth.form.starta.df <- melt(growth.form.strata, id = "site_unique",
variable.name = "strata", value.name = "percentage_cover")
growth.form.strata.t1 <- merge(growth.form.starta.df,
info.revisit.2.t1, by = 'site_unique')
growth.form.strata.t2 <- merge(growth.form.starta.df,
info.revisit.2.t2, by = 'site_unique')
missing_location.t1 <- setdiff(unique(growth.form.strata.t1$site_location_name), unique(growth.form.strata.t2$site_location_name))
missing_location.t2 <- setdiff(unique(growth.form.strata.t2$site_location_name), unique(growth.form.strata.t1$site_location_name))
growth.form.strata.t1.filtered <-subset(growth.form.strata.t1, subset = !(site_location_name %in% missing_location.t1)) %>%
arrange(site_location_name, strata)
growth.form.strata.t2.filtered <-subset(growth.form.strata.t2, subset = !(site_location_name %in% missing_location.t2)) %>%
arrange(site_location_name, strata)
growth.form.strata.change <- merge(growth.form.strata.t1, growth.form.strata.t2, by = c("site_location_name", "strata"))
### Plot 2 - Strata together
change.p <- ggplot(growth.form.strata.change,
map = aes(x = percentage_cover.x, y = percentage_cover.y,
colour =  strata)) + geom_point() + geom_abline()
ggplotly(change.p)
change.p <- ggplot(growth.form.strata.change ,map = aes(x = percentage_cover.x, y = percentage_cover.y,
colour =  strata)) + geom_point() + geom_abline() +
facet_grid(~strata)
library(ggplot2)
Original <- read.csv(file = "dea_fc_sites_nearest.csv")
#opaque.fc <- fractional_cover(veg.PI = veg.info$veg.PI, in_canopy_sky = "TRUE")
#dea.fc.sites.plotting <- merge(dea.fc.sites.nearest, opaque.fc, by = 'site_unique')
dea.fc.sites.nearest <- read.csv("dea_fc_sites_nearest_pixel_inc.csv")
dea.fc.sites.plotting <- merge(dea.fc.sites.nearest, insitu.fractional.cover, by = 'site_unique')
dea.fc.sites.plotting <- subset(dea.fc.sites.plotting, subset = (npixels > 100 & npixels <= 121))
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + geom_smooth()
# Bare
ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + geom_smooth()
# Brown
ggplot(dea.fc.sites.plotting, aes(y = npv, x = brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + geom_smooth()
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = (pv+npv), x = (green+brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + geom_smooth()
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = (pv+npv), x = (green+brown))) + geom_point() + geom_abline() +
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = (pv+npv), x = (green+brown))) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + geom_smooth()
View(dea.fc.sites.nearest)
Metrics::rmse(actual = dea.fc.sites.plotting$green,
predicted = dea.fc.sites.plotting$pv)
Metrics::rmse(actual = dea.fc.sites.plotting$bare,
predicted = dea.fc.sites.plotting$bs)
Metrics::rmse(actual = dea.fc.sites.plotting$brown,
predicted = dea.fc.sites.plotting$npv)
Metrics::rmse(actual = dea.fc.sites.plotting$bare,
predicted = dea.fc.sites.plotting$bs)
Metrics::rmse(actual = dea.fc.sites.plotting$brown,
predicted = dea.fc.sites.plotting$npv)
Metrics::rmse(actual = dea.fc.sites.plotting$green,
predicted = dea.fc.sites.plotting$pv)
Metrics::rmse(actual = dea.fc.sites.plotting$bare,
predicted = dea.fc.sites.plotting$bs)
Metrics::rmse(actual = dea.fc.sites.plotting$bare,
predicted = dea.fc.sites.plotting$bs)
# Brown
ggplot(dea.fc.sites.plotting, aes(y = npv, x = brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + geom_smooth()
# Bare
ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + geom_smooth()
View(dea.fc.sites.plotting)
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green, colour = diff)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + geom_smooth()
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green, colour = diff)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green, colour = abs(diff) )) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green, colour = abs(diff) )) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + theme_classic()
# Greenness
ggplot(dea.fc.sites.plotting, aes(y = pv, x = green, colour = abs(diff) )) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)
