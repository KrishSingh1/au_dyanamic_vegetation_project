geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen", "bs.mean" = "darkred",
"npv.mean" = "darkblue", "pv.mean" = "darkgreen")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
p <- ggplotly(pl) %>%
rangeslider()
p
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/Dea_Data_Repeated_Sites_Visualisation.R")
p <- ggplotly(pl) %>%
rangeslider()
p
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/Dea_Data_Repeated_Sites_Visualisation.R")
p <- ggplotly(pl) %>%
rangeslider()
p
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/Dea_Data_Repeated_Sites_Visualisation.R")
p <- ggplotly(pl) %>%
rangeslider()
p
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/Dea_Data_Repeated_Sites_Visualisation.R")
p <- ggplotly(pl) %>%
rangeslider()
p
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/Dea_Data_Repeated_Sites_Visualisation.R")
p <- ggplotly(pl) %>%
rangeslider()
p
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/Dea_Data_Repeated_Sites_Visualisation.R")
## Using ggplotly
pl <- ggplot(dea.data.agg.essen, aes(x = Group.1)) +
geom_line(mapping = aes(y = bs, colour = "bs")) +
geom_line(mapping = aes(y = npv, colour = "npv")) +
geom_line(mapping = aes(y = pv, colour = "pv")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
geom_line(data = means, aes(x = Group.1, y = bs, colour = "bs.mean"))+
geom_line(data = means, aes(x = Group.1, y = npv, colour = "npv.mean"))+
geom_line(data = means, aes(x = Group.1, y = pv, colour = "pv.mean"))+
xlab("Time") +
ylab("Colour Intensity") +
labs(title = site.location) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bs.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "npv.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen", "bs.mean" = "darkred",
"npv.mean" = "darkblue", "pv.mean" = "darkgreen")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
p <- ggplotly(pl) %>%
rangeslider()
p
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/Dea_Data_Repeated_Sites_Visualisation.R")
p
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/Dea_Data_Repeated_Sites_Visualisation.R")
p
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/Dea_Data_Repeated_Sites_Visualisation.R")
p
## Using ggplotly
pl <- ggplot(dea.data.agg.essen, aes(x = Group.1)) +
geom_line(mapping = aes(y = bs, colour = "bs")) +
geom_line(mapping = aes(y = npv, colour = "npv")) +
geom_line(mapping = aes(y = pv, colour = "pv")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
geom_line(data = means, aes(x = Group.1, y = bs, colour = "bs.mean"))+
geom_line(data = means, aes(x = Group.1, y = npv, colour = "npv.mean"))+
geom_line(data = means, aes(x = Group.1, y = pv, colour = "pv.mean"))+
xlab("Time") +
ylab("Colour Intensity") +
labs(title = site.location) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bs.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "npv.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen", "bs.mean" = "darkred",
"npv.mean" = "darkblue", "pv.mean" = "darkgreen")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
p <- ggplotly(pl) %>%
rangeslider()
p
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/Dea_Data_Repeated_Sites_Visualisation.R")
p
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/Dea_Data_Repeated_Sites_Visualisation.R")
p <- ggplotly(pl) %>%
rangeslider()
p
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/Dea_Data_Repeated_Sites_Visualisation.R")
p
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/Dea_Data_Repeated_Sites_Visualisation.R")
p
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/Dea_Data_Repeated_Sites_Visualisation.R")
p
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/Dea_Data_Repeated_Sites_Visualisation.R")
p
View(dea.data.agg.essen)
View(dea.data)
## Using ggplotly
pl <- ggplot(dea.data.agg.essen, aes(x = Group.1)) +
geom_line(mapping = aes(y = bs, colour = "bs")) +
geom_line(mapping = aes(y = npv, colour = "npv")) +
geom_line(mapping = aes(y = pv, colour = "pv")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
geom_line(data = means, aes(x = Group.1, y = bs, colour = "bs.mean"))+
geom_line(data = means, aes(x = Group.1, y = npv, colour = "npv.mean"))+
geom_line(data = means, aes(x = Group.1, y = pv, colour = "pv.mean"))+
xlab("Time") +
ylab("Colour Intensity") +
labs(title = site.location) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bs.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "npv.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen", "bs.mean" = "darkred",
"npv.mean" = "darkblue", "pv.mean" = "darkgreen")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/Dea_Data_Repeated_Sites_Visualisation.R")
p
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/Dea_Data_Repeated_Sites_Visualisation.R")
p
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/DEA_Data_Repeated_Sites_Change.R")
both.changs.df
aggregate(both.changs.df[,c("pv","npv","bs", "green", "brown", "bare")],
list(both.changs.df$site_location_name), FUN = mean, na.rm = T )
both.changes.agg <- aggregate(both.changs.df[,c("pv","npv","bs", "green", "brown", "bare")],
list(both.changs.df$site_location_name), FUN = mean, na.rm = T)
bs.bare.pl <- ggplot(data = both.changes.agg, aes(x = bare, y = bs)) + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
pv.green.pl <- ggplot(data = both.changes.agg, aes(x = green, y = pv)) + labs(x = "\u0394 green cover (in-situ)", y = "\u0394 green cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
npv.brown.pl <- ggplot(data = both.changes.agg, aes(x = brown, y = npv)) + geom_point() + labs(x = "\u0394 brown cover (in-situ)", y = "\u0394 brown cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
bs.bare.pl
pv.green.pl
npv.brown.pl
all.pl <- ggplot(data = both.changes.agg) + geom_point(aes(x = brown, y = npv)) + geom_point(aes(x = green, y = pv)) +
geom_point(aes(x = bare, y = bs)) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
all.pl <- ggplot(data = both.changes.agg) + geom_point(aes(x = brown, y = npv), colour = 'blue') + geom_point(aes(x = green, y = pv), colour = 'green') +
geom_point(aes(x = bare, y = bs), colour = 'red') +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/DEA_Data_Repeated_Sites_Change.R")
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
all.pl <- ggplot(data = both.changes.agg) + geom_point(aes(x = brown, y = npv), colour = 'blue', label = "npv") + geom_point(aes(x = green, y = pv), colour = 'green') +
geom_point(aes(x = bare, y = bs), colour = 'red') +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
all.pl <- ggplot(data = both.changes.agg) + geom_point(aes(x = brown, y = npv), colour = 'blue', lab = "npv") + geom_point(aes(x = green, y = pv), colour = 'green') +
geom_point(aes(x = bare, y = bs), colour = 'red') +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
all.pl <- ggplot(data = both.changes.agg) + geom_point(aes(x = brown, y = npv), colour = 'brown cover', lab = "npv") + geom_point(aes(x = green, y = pv), colour = 'green cover') +
geom_point(aes(x = bare, y = bs), colour = 'bare soil') +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
all.pl <- ggplot(data = both.changes.agg) + geom_point(aes(x = brown, y = npv), colour = 'brown cover', lab = "npv") + geom_point(aes(x = green, y = pv), colour = 'green cover') +
geom_point(aes(x = bare, y = bs), colour = 'bare cover') +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual('brown cover' = 'blue', 'green cover' = 'green', 'bare cover' = 'red')
all.pl <- ggplot(data = both.changes.agg) + geom_point(aes(x = brown, y = npv), colour = 'brown cover') + geom_point(aes(x = green, y = pv), colour = 'green cover') +
geom_point(aes(x = bare, y = bs), colour = 'bare cover') +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual('brown cover' = 'blue', 'green cover' = 'green', 'bare cover' = 'red')
all.pl <- ggplot(data = both.changes.agg) + geom_point(aes(x = brown, y = npv), colour = 'brown cover') + geom_point(aes(x = green, y = pv), colour = 'green cover') +
geom_point(aes(x = bare, y = bs), colour = 'bare cover') +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'cover', values = c('brown cover' = 'blue', 'green cover' = 'green', 'bare cover' = 'red'))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
all.pl <- ggplot(data = both.changes.agg) + geom_point(aes(x = brown, y = npv), colour = 'brown cover') + geom_point(aes(x = green, y = pv), colour = 'green cover') +
geom_point(aes(x = bare, y = bs), colour = 'bare cover') +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'cover', values = c('brown cover' = 'blue', 'green cover' = 'green', 'bare cover' = 'red'))
all.pl
all.pl <- ggplot(data = both.changes.agg) + geom_point(aes(x = brown, y = npv, colour = 'brown cover')) + geom_point(aes(x = green, y = pv, colour = 'green cover')) +
geom_point(aes(x = bare, y = bs, colour = 'bare cover')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'cover', values = c('brown cover' = 'blue', 'green cover' = 'green', 'bare cover' = 'red'))
all.pl
all.pl <- ggplot(data = both.changes.agg) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown cover' = 'blue', 'green cover' = 'green', 'bare cover' = 'red'))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
all.pl <- ggplot(data = both.changes.agg) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red'))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
both.changs.df <- merge(dea.fc.change.df,site.fc.change.df, by = c("site_location_name", "visit_start_date_a",
"visit_start_date_b"))
bs.bare.pl <- ggplot(data = both.changs.df, aes(x = bare, y = bs)) + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
pv.green.pl <- ggplot(data = both.changs.df, aes(x = green, y = pv)) + labs(x = "\u0394 green cover (in-situ)", y = "\u0394 green cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
npv.brown.pl <- ggplot(data = both.changs.df, aes(x = brown, y = npv)) + geom_point() + labs(x = "\u0394 brown cover (in-situ)", y = "\u0394 brown cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
all.pl <- ggplot(data = both.changs.df) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red'))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
both.changes.agg <- aggregate(both.changs.df[,c("pv","npv","bs", "green", "brown", "bare")],
list(both.changs.df$site_location_name), FUN = mean, na.rm = T)
bs.bare.pl <- ggplot(data = both.changes.agg, aes(x = bare, y = bs)) + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
pv.green.pl <- ggplot(data = both.changes.agg, aes(x = green, y = pv)) + labs(x = "\u0394 green cover (in-situ)", y = "\u0394 green cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
npv.brown.pl <- ggplot(data = both.changes.agg, aes(x = brown, y = npv)) + geom_point() + labs(x = "\u0394 brown cover (in-situ)", y = "\u0394 brown cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
all.pl <- ggplot(data = both.changes.agg) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red'))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/DEA_Data_Repeated_Sites_Change.R")
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
both.changs.df <- merge(dea.fc.change.df,site.fc.change.df, by = c("site_location_name", "visit_start_date_a",
"visit_start_date_b"))
bs.bare.pl <- ggplot(data = both.changs.df, aes(x = bare, y = bs)) + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
pv.green.pl <- ggplot(data = both.changs.df, aes(x = green, y = pv)) + labs(x = "\u0394 green cover (in-situ)", y = "\u0394 green cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
npv.brown.pl <- ggplot(data = both.changs.df, aes(x = brown, y = npv)) + geom_point() + labs(x = "\u0394 brown cover (in-situ)", y = "\u0394 brown cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
all.pl <- ggplot(data = both.changs.df) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red'))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
library(plotly)
library(ggplot2)
library(xts)
library(forecast)
library(seasonal)
library(dplyr)
library(caret)
library(cowplot)
library(data.table)
library(tune)
trim_to_nearest_coord <- function(ausplots.info.i.index, veg.info, dea.fc.i, reference.query ) {
reference.query.index <- which(reference.query$site_location_name == veg.info$site.info$site_location_name[ausplots.info.i.index][1])
#print(reference.query.index)
# Site End Points:
#W.site <- veg.info$site.info$pit_marker_easting[ausplots.info.i.index][2]
#S.site <- veg.info$site.info$pit_marker_northing[ausplots.info.i.index][2]
W.site <- reference.query$pit_marker_easting[reference.query.index]
S.site <- reference.query$pit_marker_northing[reference.query.index]
N.site <- S.site + 100
E.site <- W.site + 100
#print(W.site)
# Remote End Points:
E.remote.incre <- unique(dea.fc.i$x)
N.remote.incre <- unique(dea.fc.i$y)
# Find Closest Points:
W.closest <- E.remote.incre[which.min(abs(E.remote.incre - W.site))]
E.closest <- E.remote.incre[which.min(abs(E.remote.incre - E.site))]
N.closest <- N.remote.incre[which.min(abs(N.remote.incre - N.site))]
S.closest <- N.remote.incre[which.min(abs(N.remote.incre - S.site))]
#print(W.closest)
#print(E.closest)
#print(N.closest)
#print(S.closest)
# Trim dataset:
trimmed <- subset(dea.fc.i, subset = (x >= W.closest & x <= E.closest &
y >= S.closest & y <= N.closest))
#print(unique(trimmed$x))
#print(unique(trimmed$y))
return(trimmed)
}
# Get Needed datasets
directory <- "/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/DataExtraction/BACKUP_DATA/csv_files"
files <- list.files(directory, pattern = "\\.csv$", full.names = FALSE)
fileNames <- tools::file_path_sans_ext(files)
veg.info <- readRDS("../STEP2_VEG_EXTRACTION/site_veg.rds")
insitu.fractional.cover <- readRDS("AusPlots_fractional_cover.rds")
sites.query <- read.csv("/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/query/sites_info_query.csv")
# Get Site names
site.names <- unique(veg.info$site.info$site_location_name)
# Count the number of observations of each site
counts.df <- as.data.frame(table(veg.info$site.info$site_location_name))
sites.revisit.2.df <- subset(counts.df, Freq >= 2) # For sites that were visited two or more
# Merge sites with counts == 2 with current veg information
site.info.df <- as.data.frame(veg.info$site.info)
site.info.df <- merge(site.info.df, insitu.fractional.cover, by = "site_unique")
# Remeasure Counts
counts.df <- as.data.frame(table(site.info.df$site_location_name))
sites.revisit.2.df <- subset(counts.df, Freq >= 2) # For sites that were visited two or more
# Subset based on counts
site.info.df.revisit <- subset(site.info.df, subset = site_location_name %in% sites.revisit.2.df$Var1)
site.info.df.revisit$visit_start_date <- as.Date(site.info.df.revisit$visit_start_date)
# Subset based on the avaliable dea information
site.info.df.revisit <- subset(site.info.df.revisit, subset = site_location_name %in% fileNames)
table(site.info.df.revisit$site_location_name)
View(site.info.df.revisit)
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/DEA_Data_Repeated_Sites_Change.R")
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/DEA_Data_Repeated_Sites_Change.R")
both.changs.df <- merge(dea.fc.change.df,site.fc.change.df, by = c("site_location_name", "visit_start_date_a",
"visit_start_date_b"))
bs.bare.pl <- ggplot(data = both.changs.df, aes(x = bare, y = bs)) + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
pv.green.pl <- ggplot(data = both.changs.df, aes(x = green, y = pv)) + labs(x = "\u0394 green cover (in-situ)", y = "\u0394 green cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
npv.brown.pl <- ggplot(data = both.changs.df, aes(x = brown, y = npv)) + geom_point() + labs(x = "\u0394 brown cover (in-situ)", y = "\u0394 brown cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
all.pl <- ggplot(data = both.changs.df) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red'))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
both.changes.agg <- aggregate(both.changs.df[,c("pv","npv","bs", "green", "brown", "bare")],
list(both.changs.df$site_location_name), FUN = mean, na.rm = T)
bs.bare.pl <- ggplot(data = both.changes.agg, aes(x = bare, y = bs)) + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
pv.green.pl <- ggplot(data = both.changes.agg, aes(x = green, y = pv)) + labs(x = "\u0394 green cover (in-situ)", y = "\u0394 green cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
npv.brown.pl <- ggplot(data = both.changes.agg, aes(x = brown, y = npv)) + geom_point() + labs(x = "\u0394 brown cover (in-situ)", y = "\u0394 brown cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred()
all.pl <- ggplot(data = both.changes.agg) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red'))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
both.changs.df <- merge(dea.fc.change.df,site.fc.change.df, by = c("site_location_name", "visit_start_date_a",
"visit_start_date_b"))
bs.bare.pl <- ggplot(data = both.changs.df, aes(x = bare, y = bs)) + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
bs.bare.pl
both.changs.df <- merge(dea.fc.change.df,site.fc.change.df, by = c("site_location_name", "visit_start_date_a",
"visit_start_date_b"))
bs.bare.pl <- ggplot(data = both.changs.df, aes(x = bare, y = bs)) + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
pv.green.pl <- ggplot(data = both.changs.df, aes(x = green, y = pv)) + labs(x = "\u0394 green cover (in-situ)", y = "\u0394 green cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
npv.brown.pl <- ggplot(data = both.changs.df, aes(x = brown, y = npv)) + geom_point() + labs(x = "\u0394 brown cover (in-situ)", y = "\u0394 brown cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
all.pl <- ggplot(data = both.changs.df) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red')) +
+ xlim(c(-100,100)) + ylim(c(-100,100))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
both.changs.df <- merge(dea.fc.change.df,site.fc.change.df, by = c("site_location_name", "visit_start_date_a",
"visit_start_date_b"))
bs.bare.pl <- ggplot(data = both.changs.df, aes(x = bare, y = bs), colour = 'red') + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
pv.green.pl <- ggplot(data = both.changs.df, aes(x = green, y = pv), colour = 'green') + labs(x = "\u0394 green cover (in-situ)", y = "\u0394 green cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
npv.brown.pl <- ggplot(data = both.changs.df, aes(x = brown, y = npv), colour = 'blue') + geom_point() + labs(x = "\u0394 brown cover (in-situ)", y = "\u0394 brown cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
all.pl <- ggplot(data = both.changs.df) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red')) +
+ xlim(c(-100,100)) + ylim(c(-100,100))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
both.changs.df <- merge(dea.fc.change.df,site.fc.change.df, by = c("site_location_name", "visit_start_date_a",
"visit_start_date_b"))
bs.bare.pl <- ggplot(data = both.changs.df, aes(x = bare, y = bs)) + geom_point(colour = 'red') + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
pv.green.pl <- ggplot(data = both.changs.df, aes(x = green, y = pv), colour = 'green') + labs(x = "\u0394 green cover (in-situ)", y = "\u0394 green cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
npv.brown.pl <- ggplot(data = both.changs.df, aes(x = brown, y = npv), colour = 'blue') + geom_point() + labs(x = "\u0394 brown cover (in-situ)", y = "\u0394 brown cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
all.pl <- ggplot(data = both.changs.df) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red')) +
+ xlim(c(-100,100)) + ylim(c(-100,100))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
both.changs.df <- merge(dea.fc.change.df,site.fc.change.df, by = c("site_location_name", "visit_start_date_a",
"visit_start_date_b"))
bs.bare.pl <- ggplot(data = both.changs.df, aes(x = bare, y = bs)) + geom_point(colour = 'red') + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
pv.green.pl <- ggplot(data = both.changs.df, aes(x = green, y = pv), colour = 'green') + labs(x = "\u0394 green cover (in-situ)", y = "\u0394 green cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
npv.brown.pl <- ggplot(data = both.changs.df, aes(x = brown, y = npv), colour = 'blue') + geom_point() + labs(x = "\u0394 brown cover (in-situ)", y = "\u0394 brown cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
all.pl <- ggplot(data = both.changs.df) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red')) +
+ xlim(c(-100,100)) + ylim(c(-100,100))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
bs.bare.pl <- ggplot(data = both.changs.df, aes(x = bare, y = bs)) + geom_point(colour = 'red') + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
pv.green.pl <- ggplot(data = both.changs.df, aes(x = green, y = pv), colour = 'green') + labs(x = "\u0394 green cover (in-situ)", y = "\u0394 green cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
npv.brown.pl <- ggplot(data = both.changs.df, aes(x = brown, y = npv), colour = 'blue') + geom_point() + labs(x = "\u0394 brown cover (in-situ)", y = "\u0394 brown cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
all.pl <- ggplot(data = both.changs.df) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red')) +
+ xlim(c(-100,100)) + ylim(c(-100,100))
all.pl <- ggplot(data = both.changs.df) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red')) +
xlim(c(-100,100)) + ylim(c(-100,100))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
bs.bare.pl <- ggplot(data = both.changs.df) + geom_point(aes(x = bare, y = bs),colour = 'red') + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
pv.green.pl <- ggplot(data = both.changs.df, aes(x = green, y = pv), colour = 'green') + labs(x = "\u0394 green cover (in-situ)", y = "\u0394 green cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
npv.brown.pl <- ggplot(data = both.changs.df, aes(x = brown, y = npv), colour = 'blue') + geom_point() + labs(x = "\u0394 brown cover (in-situ)", y = "\u0394 brown cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
all.pl <- ggplot(data = both.changs.df) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red')) +
xlim(c(-100,100)) + ylim(c(-100,100))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
bs.bare.pl <- ggplot(data = both.changs.df) + geom_point(mapping = aes(x = bare, y = bs),colour = 'red') + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
pv.green.pl <- ggplot(data = both.changs.df, aes(x = green, y = pv), colour = 'green') + labs(x = "\u0394 green cover (in-situ)", y = "\u0394 green cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
npv.brown.pl <- ggplot(data = both.changs.df, aes(x = brown, y = npv), colour = 'blue') + geom_point() + labs(x = "\u0394 brown cover (in-situ)", y = "\u0394 brown cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
all.pl <- ggplot(data = both.changs.df) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red')) +
xlim(c(-100,100)) + ylim(c(-100,100))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
both.changs.df <- merge(dea.fc.change.df,site.fc.change.df, by = c("site_location_name", "visit_start_date_a",
"visit_start_date_b"))
bs.bare.pl <- ggplot(data = both.changs.df, aes(x = bare, y = bs)) + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
pv.green.pl <- ggplot(data = both.changs.df, aes(x = green, y = pv)) + labs(x = "\u0394 green cover (in-situ)", y = "\u0394 green cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
npv.brown.pl <- ggplot(data = both.changs.df, aes(x = brown, y = npv), colour = 'blue') + geom_point() + labs(x = "\u0394 brown cover (in-situ)", y = "\u0394 brown cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
all.pl <- ggplot(data = both.changs.df) + geom_point(aes(x = brown, y = npv)) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red')) +
xlim(c(-100,100)) + ylim(c(-100,100))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
all.pl <- ggplot(data = both.changs.df) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red')) +
xlim(c(-100,100)) + ylim(c(-100,100))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
both.changes.agg <- aggregate(both.changs.df[,c("pv","npv","bs", "green", "brown", "bare")],
list(both.changs.df$site_location_name), FUN = mean, na.rm = T)
bs.bare.pl <- ggplot(data = both.changes.agg, aes(x = bare, y = bs)) + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
pv.green.pl <- ggplot(data = both.changes.agg, aes(x = green, y = pv)) + labs(x = "\u0394 green cover (in-situ)", y = "\u0394 green cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
npv.brown.pl <- ggplot(data = both.changs.df, aes(x = brown, y = npv), colour = 'blue') + geom_point() + labs(x = "\u0394 brown cover (in-situ)", y = "\u0394 brown cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
all.pl <- ggplot(data = both.changes.agg) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red')) +
xlim(c(-100,100)) + ylim(c(-100,100))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
both.changs.df <- merge(dea.fc.change.df,site.fc.change.df, by = c("site_location_name", "visit_start_date_a",
"visit_start_date_b"))
bs.bare.pl <- ggplot(data = both.changs.df, aes(x = bare, y = bs)) + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
pv.green.pl <- ggplot(data = both.changs.df, aes(x = green, y = pv)) + labs(x = "\u0394 green cover (in-situ)", y = "\u0394 green cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
npv.brown.pl <- ggplot(data = both.changs.df, aes(x = brown, y = npv), colour = 'blue') + geom_point() + labs(x = "\u0394 brown cover (in-situ)", y = "\u0394 brown cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
all.pl <- ggplot(data = both.changs.df) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red')) +
xlim(c(-100,100)) + ylim(c(-100,100))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
both.changes.agg <- aggregate(both.changs.df[,c("pv","npv","bs", "green", "brown", "bare")],
list(both.changs.df$site_location_name), FUN = mean, na.rm = T)
bs.bare.pl <- ggplot(data = both.changes.agg, aes(x = bare, y = bs)) + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
pv.green.pl <- ggplot(data = both.changes.agg, aes(x = green, y = pv)) + labs(x = "\u0394 green cover (in-situ)", y = "\u0394 green cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
npv.brown.pl <- ggplot(data = both.changs.df, aes(x = brown, y = npv), colour = 'blue') + geom_point() + labs(x = "\u0394 brown cover (in-situ)", y = "\u0394 brown cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
all.pl <- ggplot(data = both.changes.agg) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red')) +
xlim(c(-100,100)) + ylim(c(-100,100))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
source("C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/STEP4_EXPORE_DATA/DEA_Data_Repeated_Sites_Change.R")
both.changs.df <- merge(dea.fc.change.df,site.fc.change.df, by = c("site_location_name", "visit_start_date_a",
"visit_start_date_b"))
bs.bare.pl <- ggplot(data = both.changs.df, aes(x = bare, y = bs)) + labs(x = "\u0394 bare cover (in-situ)", y = "\u0394 bare cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
pv.green.pl <- ggplot(data = both.changs.df, aes(x = green, y = pv)) + labs(x = "\u0394 green cover (in-situ)", y = "\u0394 green cover (remote)") +
geom_point() + geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
npv.brown.pl <- ggplot(data = both.changs.df, aes(x = brown, y = npv), colour = 'blue') + geom_point() + labs(x = "\u0394 brown cover (in-situ)", y = "\u0394 brown cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + xlim(c(-100,100)) + ylim(c(-100,100))
all.pl <- ggplot(data = both.changs.df) + geom_point(aes(x = brown, y = npv, colour = 'brown')) + geom_point(aes(x = green, y = pv, colour = 'green')) +
geom_point(aes(x = bare, y = bs, colour = 'bare')) +labs(x = "\u0394 cover (in-situ)", y = "\u0394 cover (remote)") +
geom_abline(slope = 1, intercept = 0) + coord_obs_pred() + scale_colour_manual(name = 'Cover', values = c('brown' = 'blue', 'green' = 'green', 'bare' = 'red')) +
xlim(c(-100,100)) + ylim(c(-100,100))
plot_grid(bs.bare.pl,npv.brown.pl,pv.green.pl, all.pl)
