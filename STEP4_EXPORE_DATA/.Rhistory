RI = 89 # record index
files <- list.files(directory, pattern = "\\.csv$", full.names = FALSE)
file.names <- tools::file_path_sans_ext(files)
site.path <- paste(directory,files[RI],sep = "")
dea.data <- read.csv(site.path)
veg.info <- readRDS("../STEP2_VEG_EXTRACTION/site_veg.rds")
site.info.data <- veg.info$site.info
site.info.index <- which(site.info.data$site_location_name == file.names[RI])
site.info.data <- site.info.data[site.info.index,]
insitu.fractional.cover <- readRDS("AusPlots_fractional_cover.rds")
ausplots.fc <- insitu.fractional.cover[grep(file.names[RI], insitu.fractional.cover$site_unique),]
site.info.data <- merge(ausplots.fc, site.info.data, by = 'site_unique')
dea.data <- trim_to_nearest_coord(site.info.index, veg.info, dea.data)
dea.data.agg <- aggregate(dea.data, by = list(dea.data$time),
FUN = mean, na.rm = T)
posit.date <- as.POSIXlt(dea.data.agg$Group.1) # for use for a later section: smoothing time series
dea.data.agg$Group.1 <- as.Date(dea.data.agg$Group.1)
## Get essential data from Ausplots
site.info.data.essen <- site.info.data[,c("visit_start_date", "bare",
"brown", "green" )]
site.info.data.essen$visit_start_date <- as.Date(site.info.data.essen$visit_start_date)
colnames(site.info.data.essen) <- colnames(
dea.data.agg[,c("Group.1","bs","npv","pv")]
)
dea.data.agg.essen <- dea.data.agg[,c("Group.1","bs","npv","pv", "ue")]
time.sequence <- data.frame(Group.1 =  seq(from = min(dea.data.agg.essen$Group.1), to = max(dea.data.agg.essen$Group.1), by='8 days'))
merged.data <- dea.data.agg.essen %>% full_join(time.sequence)
merged.data$Group.1 <- as.Date(merged.data$Group.1)
merged.data <- merged.data %>% arrange(Group.1)
## Using ggplotly
pl <- ggplot(dea.data.agg.essen, aes(x = Group.1)) +
geom_line(mapping = aes(y = bs, colour = "bs")) +
geom_line(mapping = aes(y = npv, colour = "npv")) +
geom_line(mapping = aes(y = pv, colour = "pv")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
xlab("Time") +
ylab("Colour Intensity") +
labs(title = file.names[RI]) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bs.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "npv.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "1 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
p <- ggplotly(pl) %>%
rangeslider()
p
library(ausplotsR)
library(reshape2)
library(ggplot2)
library(dplyr)
library(plotly)
veg.info <- readRDS("../STEP2_VEG_EXTRACTION/site_veg.rds")
growth.form <- readRDS("growth_form_matrix.rds")
growth.form.strata <- growth_form_table(veg.info$veg.PI, m_kind = "percent_cover",
cumulative = FALSE, by_strata = TRUE)
insitu.fractional.cover <- readRDS("AusPlots_fractional_cover.rds")
site.names <- unique(veg.info$site.info$site_location_name)
site.observations <- unique(veg.info$site.info$site_unique)
df <- as.data.frame(t(data.frame(purrr::flatten(lapply(site.observations, strsplit, '-')))))
counts <- c()
for (n in site.names){
counts <- c(counts, sum(df$V1 == n))
}
counts.df <- data.frame(site.names, counts)
sites.revisit.df <- subset(counts.df, counts > 1) # For all revisited data
View(sites.revisit.df)
nrow(sites.revisit.df)
View(site.info.data)
which(files.name == 'NTABRT0001')
which(files.nameS == 'NTABRT0001')
which(files.names == 'NTABRT0001')
which(file.names == 'NTABRT0001')
# "NSTSYB0002" is 81
# 'NTABRT0001' is  94
RI = 94 # record index
files <- list.files(directory, pattern = "\\.csv$", full.names = FALSE)
file.names <- tools::file_path_sans_ext(files)
site.path <- paste(directory,files[RI],sep = "")
dea.data <- read.csv(site.path)
veg.info <- readRDS("../STEP2_VEG_EXTRACTION/site_veg.rds")
site.info.data <- veg.info$site.info
site.info.index <- which(site.info.data$site_location_name == file.names[RI])
site.info.data <- site.info.data[site.info.index,]
insitu.fractional.cover <- readRDS("AusPlots_fractional_cover.rds")
ausplots.fc <- insitu.fractional.cover[grep(file.names[RI], insitu.fractional.cover$site_unique),]
site.info.data <- merge(ausplots.fc, site.info.data, by = 'site_unique')
dea.data <- trim_to_nearest_coord(site.info.index, veg.info, dea.data)
dea.data.agg <- aggregate(dea.data, by = list(dea.data$time),
FUN = mean, na.rm = T)
posit.date <- as.POSIXlt(dea.data.agg$Group.1) # for use for a later section: smoothing time series
dea.data.agg$Group.1 <- as.Date(dea.data.agg$Group.1)
## Get essential data from Ausplots
site.info.data.essen <- site.info.data[,c("visit_start_date", "bare",
"brown", "green" )]
site.info.data.essen$visit_start_date <- as.Date(site.info.data.essen$visit_start_date)
colnames(site.info.data.essen) <- colnames(
dea.data.agg[,c("Group.1","bs","npv","pv")]
)
dea.data.agg.essen <- dea.data.agg[,c("Group.1","bs","npv","pv", "ue")]
time.sequence <- data.frame(Group.1 =  seq(from = min(dea.data.agg.essen$Group.1), to = max(dea.data.agg.essen$Group.1), by='8 days'))
merged.data <- dea.data.agg.essen %>% full_join(time.sequence)
merged.data$Group.1 <- as.Date(merged.data$Group.1)
merged.data <- merged.data %>% arrange(Group.1)
## Using ggplotly
pl <- ggplot(dea.data.agg.essen, aes(x = Group.1)) +
geom_line(mapping = aes(y = bs, colour = "bs")) +
geom_line(mapping = aes(y = npv, colour = "npv")) +
geom_line(mapping = aes(y = pv, colour = "pv")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
xlab("Time") +
ylab("Colour Intensity") +
labs(title = file.names[RI]) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bs.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "npv.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "1 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
p <- ggplotly(pl) %>%
rangeslider()
p
#
#
# ### Smoothing the time-series
#
# ### Smoothing the time-series
#
library(ncdf4)
library(plotly)
library(timetk)
library(dplyr)
library(ggplot2)
library(lubridate)
directory <- "/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/DataExtraction/BACKUP_DATA/ausplots_agcd/"
precip <- file.path(directory, "precip")
tmax <- file.path(directory, "tmax")
tmin <- file.path(directory, "tmin")
vapourpres_h09 <- file.path(directory, "vapourpres_h09")
vapourpres_h15 <- file.path(directory, "vapourpres_h15")
files <- list.files(precip, pattern = "\\.nc$", full.names = FALSE) # same for each directory
fileNames <- tools::file_path_sans_ext(files)
timeseries_plot <- function(index, files, variable, directory){
data.directory <- file.path(directory, variable)
nc.path <- file.path(data.directory, files[index])
print("Open nc")
nc <- nc_open(nc.path)
print("Opened")
var <- ncvar_get(nc, variable)
time.var <- ncvar_get(nc, "time")
start.date <- as.Date('1986-12-31')
end.date <- as.Date('2022-12-30')
dates <- seq(from = start.date, by='1 days', to = end.date)
data.df <- data.frame(time = dates,variable = var) %>% as_tibble()
return(
data.df %>% plot_time_series_regression(
.date_var     = time,
.formula      = variable ~ as.numeric(time) + month(time, label = TRUE),
.show_summary = T)
)
}
RI <- 3
nc.data.site <- fileNames[RI]
nc.precip.path <- file.path(precip, files[RI])
nc <- nc_open(nc.precip.path)
print(nc)
attributes(nc$var)
precip.var <- ncvar_get(nc, "precip")
time.var <- ncvar_get(nc, "time")
time.var
as.date(time.var)
as.Date(time.var)
as.Date(time.var, origin = "1850-01-01")
range(as.Date(time.var, origin = "1850-01-01"))
timeseries_plot <- function(index, files, variable, directory){
data.directory <- file.path(directory, variable)
nc.path <- file.path(data.directory, files[index])
print("Open nc")
nc <- nc_open(nc.path)
print("Opened")
var <- ncvar_get(nc, variable)
time.var <- ncvar_get(nc, "time")
dates <- range(as.Date(time.var, origin = "1850-01-01"))
data.df <- data.frame(time = dates,variable = var) %>% as_tibble()
return(
data.df %>% plot_time_series_regression(
.date_var     = time,
.formula      = variable ~ as.numeric(time) + month(time, label = TRUE),
.show_summary = T)
)
}
timeseries_plot(3, files, "precip", directory)
timeseries_plot <- function(index, files, variable, directory){
data.directory <- file.path(directory, variable)
nc.path <- file.path(data.directory, files[index])
print("Open nc")
nc <- nc_open(nc.path)
print("Opened")
var <- ncvar_get(nc, variable)
time.var <- ncvar_get(nc, "time")
dates <- as.Date(time.var, origin = "1850-01-01")
data.df <- data.frame(time = dates,variable = var) %>% as_tibble()
return(
data.df %>% plot_time_series_regression(
.date_var     = time,
.formula      = variable ~ as.numeric(time) + month(time, label = TRUE),
.show_summary = T)
)
}
timeseries_plot(3, files, "precip", directory)
timeseries_plot(3, files, "tmax", directory)
timeseries_plot(3, files, "tmin", directory)
timeseries_plot(3, files, "vapourpres_h09", directory)
nc.precip.path <- file.path(vapourpres_h09, files[RI])
nc <- nc_open(nc.precip.path)
print(nc)
nc <- nc_open(nc.precip.path)
print(nc)
attributes(nc$var)
precip.var <- ncvar_get(nc, "vapourpres")
time.var <- ncvar_get(nc, "time")
timeseries_plot <- function(index, files, variable, directory){
data.directory <- file.path(directory, variable)
nc.path <- file.path(data.directory, files[index])
print("Open nc")
nc <- nc_open(nc.path)
print("Opened")
if("vapourpres_h09" | "vapourpres_15") {
var <- ncvar_get(nc, "vapourpres")
}
time.var <- ncvar_get(nc, "time")
dates <- as.Date(time.var, origin = "1850-01-01")
data.df <- data.frame(time = dates,variable = var) %>% as_tibble()
return(
data.df %>% plot_time_series_regression(
.date_var     = time,
.formula      = variable ~ as.numeric(time) + month(time, label = TRUE),
.show_summary = T)
)
}
timeseries_plot(3, files, "vapourpres_h09", directory)
timeseries_plot <- function(index, files, variable, directory){
data.directory <- file.path(directory, variable)
nc.path <- file.path(data.directory, files[index])
print("Open nc")
nc <- nc_open(nc.path)
print("Opened")
if(variable == "vapourpres_h09" || variable == "vapourpres_15") {
var <- ncvar_get(nc, "vapourpres")
}
time.var <- ncvar_get(nc, "time")
dates <- as.Date(time.var, origin = "1850-01-01")
data.df <- data.frame(time = dates,variable = var) %>% as_tibble()
return(
data.df %>% plot_time_series_regression(
.date_var     = time,
.formula      = variable ~ as.numeric(time) + month(time, label = TRUE),
.show_summary = T)
)
}
timeseries_plot(3, files, "vapourpres_h09", directory)
timeseries_plot(3, files, "vapourpres_h15", directory)
timeseries_plot <- function(index, files, variable, directory){
data.directory <- file.path(directory, variable)
nc.path <- file.path(data.directory, files[index])
print("Open nc")
nc <- nc_open(nc.path)
print("Opened")
if(variable == "vapourpres_h09" || variable == "vapourpres_h15") {
var <- ncvar_get(nc, "vapourpres")
}
time.var <- ncvar_get(nc, "time")
dates <- as.Date(time.var, origin = "1850-01-01")
data.df <- data.frame(time = dates,variable = var) %>% as_tibble()
return(
data.df %>% plot_time_series_regression(
.date_var     = time,
.formula      = variable ~ as.numeric(time) + month(time, label = TRUE),
.show_summary = T)
)
}
timeseries_plot(3, files, "vapourpres_h15", directory)
nc.precip.path <- file.path(vapourpres_h15, files[RI])
nc <- nc_open(nc.precip.path)
print(nc)
attributes(nc$var)
timeseries_plot(3, files, "precip", directory)
timeseries_plot <- function(index, files, variable, directory){
data.directory <- file.path(directory, variable)
nc.path <- file.path(data.directory, files[index])
print("Open nc")
nc <- nc_open(nc.path)
print("Opened")
if(variable == "vapourpres_h09" || variable == "vapourpres_h15") {
var <- ncvar_get(nc, "vapourpres")
}
time.var <- ncvar_get(nc, "time")
dates <- as.Date(time.var, origin = "1850-01-01")
data.df <- data.frame(time = dates,variable = var) %>% as_tibble()
return(
data.df %>% plot_time_series_regression(
.date_var     = time,
.formula      = variable ~ as.numeric(time) + month(time, label = TRUE),
.show_summary = T)
)
}
timeseries_plot <- function(index, files, variable, directory){
data.directory <- file.path(directory, variable)
nc.path <- file.path(data.directory, files[index])
print("Open nc")
nc <- nc_open(nc.path)
print("Opened")
if(variable == "vapourpres_h09" || variable == "vapourpres_h15") {
var <- ncvar_get(nc, "vapourpres")
}
var <- ncvar_get(nc, variable)
time.var <- ncvar_get(nc, "time")
dates <- as.Date(time.var, origin = "1850-01-01")
data.df <- data.frame(time = dates,variable = var) %>% as_tibble()
return(
data.df %>% plot_time_series_regression(
.date_var     = time,
.formula      = variable ~ as.numeric(time) + month(time, label = TRUE),
.show_summary = T)
)
}
timeseries_plot(3, files, "precip", directory)
?movingwindow
??window
library(zoo)
timeseries_plot <- function(index, files, variable, directory){
data.directory <- file.path(directory, variable)
nc.path <- file.path(data.directory, files[index])
print("Open nc")
nc <- nc_open(nc.path)
print("Opened")
if(variable == "vapourpres_h09" || variable == "vapourpres_h15") {
var <- ncvar_get(nc, "vapourpres")
}
var <- ncvar_get(nc, variable)
time.var <- ncvar_get(nc, "time")
dates <- as.Date(time.var, origin = "1850-01-01")
monthly.var <- rollapply(var, width = 1, FUN = sum, by = "months", fill = NA)
data.df <- data.frame(time = dates,variable = monthly.var) %>% as_tibble()
return(
data.df %>% plot_time_series_regression(
.date_var     = time,
.formula      = variable ~ as.numeric(time) + month(time, label = TRUE),
.show_summary = T)
)
}
timeseries_plot(3, files, "precip", directory)
timeseries_plot <- function(index, files, variable, directory){
data.directory <- file.path(directory, variable)
nc.path <- file.path(data.directory, files[index])
print("Open nc")
nc <- nc_open(nc.path)
print("Opened")
if(variable == "vapourpres_h09" || variable == "vapourpres_h15") {
var <- ncvar_get(nc, "vapourpres")
}
var <- ncvar_get(nc, variable)
time.var <- ncvar_get(nc, "time")
dates <- as.Date(time.var, origin = "1850-01-01")
monthly.var <- rollapply(var, width = 1, FUN = sum, by = "months", fill = NA)
print(monthly.var)
data.df <- data.frame(time = dates,variable = monthly.var) %>% as_tibble()
return(
data.df %>% plot_time_series_regression(
.date_var     = time,
.formula      = variable ~ as.numeric(time) + month(time, label = TRUE),
.show_summary = T)
)
}
timeseries_plot(3, files, "precip", directory)
?rollallpy
?rollapply
timeseries_plot <- function(index, files, variable, directory){
data.directory <- file.path(directory, variable)
nc.path <- file.path(data.directory, files[index])
print("Open nc")
nc <- nc_open(nc.path)
print("Opened")
if(variable == "vapourpres_h09" || variable == "vapourpres_h15") {
var <- ncvar_get(nc, "vapourpres")
}
var <- ncvar_get(nc, variable)
time.var <- ncvar_get(nc, "time")
dates <- as.Date(time.var, origin = "1850-01-01")
data.df <- data.frame(time = dates,variable = monthly.var) %>% as_tibble()
monthly.var <- rollapply(data.df$variable, width = 1, FUN = sum, by = "months", fill = NA)
print(monthly.var)
return(
data.df %>% plot_time_series_regression(
.date_var     = time,
.formula      = variable ~ as.numeric(time) + month(time, label = TRUE),
.show_summary = T)
)
}
timeseries_plot(3, files, "precip", directory)
timeseries_plot <- function(index, files, variable, directory){
data.directory <- file.path(directory, variable)
nc.path <- file.path(data.directory, files[index])
print("Open nc")
nc <- nc_open(nc.path)
print("Opened")
if(variable == "vapourpres_h09" || variable == "vapourpres_h15") {
var <- ncvar_get(nc, "vapourpres")
}
var <- ncvar_get(nc, variable)
time.var <- ncvar_get(nc, "time")
dates <- as.Date(time.var, origin = "1850-01-01")
data.df <- data.frame(time = dates,variable = var) %>% as_tibble()
monthly.var <- rollapply(data.df$variable, width = 1, FUN = sum, by = "months", fill = NA)
print(monthly.var)
return(
data.df %>% plot_time_series_regression(
.date_var     = time,
.formula      = variable ~ as.numeric(time) + month(time, label = TRUE),
.show_summary = T)
)
}
timeseries_plot(3, files, "precip", directory)
timeseries_plot <- function(index, files, variable, directory){
data.directory <- file.path(directory, variable)
nc.path <- file.path(data.directory, files[index])
print("Open nc")
nc <- nc_open(nc.path)
print("Opened")
if(variable == "vapourpres_h09" || variable == "vapourpres_h15") {
var <- ncvar_get(nc, "vapourpres")
}
var <- ncvar_get(nc, variable)
time.var <- ncvar_get(nc, "time")
dates <- as.Date(time.var, origin = "1850-01-01")
data.df <- zoo(data.frame(time = dates,variable = var) %>% as_tibble())
monthly.var <- rollapply(data.df$variable, width = 1, FUN = sum, by = "months", fill = NA)
print(monthly.var)
return(
data.df %>% plot_time_series_regression(
.date_var     = time,
.formula      = variable ~ as.numeric(time) + month(time, label = TRUE),
.show_summary = T)
)
}
timeseries_plot(3, files, "precip", directory)
timeseries_plot <- function(index, files, variable, directory){
data.directory <- file.path(directory, variable)
nc.path <- file.path(data.directory, files[index])
print("Open nc")
nc <- nc_open(nc.path)
print("Opened")
if(variable == "vapourpres_h09" || variable == "vapourpres_h15") {
var <- ncvar_get(nc, "vapourpres")
}
var <- ncvar_get(nc, variable)
time.var <- ncvar_get(nc, "time")
dates <- as.Date(time.var, origin = "1850-01-01")
monthly.var <- rollapply(var, width = 1, FUN = sum, by = "months", fill = NA)
print(monthly.var)
data.df <- data.frame(time = dates,variable = monthly.var) %>% as_tibble()
return(
data.df %>% plot_time_series_regression(
.date_var     = time,
.formula      = variable ~ as.numeric(time) + month(time, label = TRUE),
.show_summary = T)
)
}
timeseries_plot(3, files, "precip", directory)
timeseries_plot <- function(index, files, variable, directory){
data.directory <- file.path(directory, variable)
nc.path <- file.path(data.directory, files[index])
print("Open nc")
nc <- nc_open(nc.path)
print("Opened")
if(variable == "vapourpres_h09" || variable == "vapourpres_h15") {
var <- ncvar_get(nc, "vapourpres")
}
var <- ncvar_get(nc, variable)
time.var <- ncvar_get(nc, "time")
dates <- as.Date(time.var, origin = "1850-01-01")
monthly.var <- rollapply(zoo(var,dates), width = 1, FUN = sum, by = "months", fill = NA)
print(monthly.var)
data.df <- data.frame(time = dates,variable = monthly.var) %>% as_tibble()
return(
data.df %>% plot_time_series_regression(
.date_var     = time,
.formula      = variable ~ as.numeric(time) + month(time, label = TRUE),
.show_summary = T)
)
}
timeseries_plot(3, files, "precip", directory)
