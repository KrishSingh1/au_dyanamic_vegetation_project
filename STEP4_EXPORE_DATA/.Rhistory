var <- ncvar_get(nc, 'precip')
daily.precip <- data.frame(precip = var, time = dates)
# So its in the range of July-June
daily.precip <- subset(daily.precip, subset = (time >= "1987-07-01" & time <= "2022-07-01"))
rownames(daily.precip) <- 1:nrow(daily.precip)
daily.precip$group.col <- rep(NA, nrow(daily.precip))
bound <- '-07-01'
for(year in 1987:2021) {
lower.b <- as.Date(paste0(year, bound))
upper.b <- as.Date(paste0(year+1, bound))
daily.precip[daily.precip$time >= lower.b &  daily.precip$time < upper.b,]$group.col <- paste(year,year+1, sep = "-")
}
single.annual.mean <- aggregate(daily.precip[,c('precip')], by = list(daily.precip$group.col), FUN = mean)
annual.sd <- sd(single.annual.mean$x)
annual.mean <- mean(single.annual.mean$x)
annual.cv <- annual.sd / annual.mean
annual.precip.data.i <- data.frame(site_location_name = site.location.name,
precip_sd = annual.sd,
precip_mean = mean(single.annual.mean$x),
precip_cv = annual.cv)
annual.precip.data <- rbind(annual.precip.data,annual.precip.data.i)
}
annual.precip.data <- annual.precip.data[-1,]
save(... = annual.precip.data, file = 'annual.precip.data.RData')
precip.fc.data <- merge(annual.fc.data, annual.precip.data, by = 'site_location_name')
library(ggplot2)
library(cowplot)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean*365, y = pv_mean))
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean*365, y = bs_mean))
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean*365, y = npv_mean))
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = pv_cv))
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = bs_cv))
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = npv_cv))
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean*365, y = pv_mean))
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean*365, y = bs_mean))
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean*365, y = npv_mean))
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
load('annual.precip.data.RData')
load('annual.fc.data.RData')
precip.fc.data <- merge(annual.fc.data, annual.precip.data, by = 'site_location_name')
library(stringr)
library(ncdf4)
library(dplyr)
library(lubridate)
directory <- "C:/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/DataExtraction/BACKUP_DATA/ausplots_agcd"
precip.path <- file.path(directory, "precip")
files <- list.files(precip.path, pattern = "\\.nc$", full.names = FALSE) # same for each directory
fileNames <- tools::file_path_sans_ext(files)
annual.precip.data <- data.frame(site_location_name = NA,
precip_sd = as.numeric(NA),
precip_mean = as.numeric(NA),
precip_cv = as.numeric(NA))
for(RI in 1:length(fileNames)) {
site.location.name <- stringr::str_split(fileNames[RI], "_")[[1]][1]
print(site.location.name)
nc.path <- file.path(precip.path, files[RI])
nc <- nc_open(filename = nc.path)
time.var <- ncvar_get(nc, "time")
dates <- as.Date(time.var, origin = "1850-01-01")
var <- ncvar_get(nc, 'precip')
daily.precip <- data.frame(precip = var, time = dates)
# So its in the range of July-June
daily.precip <- subset(daily.precip, subset = (time >= "1987-07-01" & time <= "2022-07-01"))
rownames(daily.precip) <- 1:nrow(daily.precip)
daily.precip$group.col <- rep(NA, nrow(daily.precip))
bound <- '-07-01'
for(year in 1987:2021) {
lower.b <- as.Date(paste0(year, bound))
upper.b <- as.Date(paste0(year+1, bound))
daily.precip[daily.precip$time >= lower.b &  daily.precip$time < upper.b,]$group.col <- paste(year,year+1, sep = "-")
}
single.annual.mean <- aggregate(daily.precip[,c('precip')], by = list(daily.precip$group.col), FUN = sum)
annual.sd <- sd(single.annual.mean$x)
annual.mean <- mean(single.annual.mean$x)
annual.cv <- annual.sd / annual.mean
annual.precip.data.i <- data.frame(site_location_name = site.location.name,
precip_sd = annual.sd,
precip_mean = mean(single.annual.mean$x),
precip_cv = annual.cv)
annual.precip.data <- rbind(annual.precip.data,annual.precip.data.i)
}
View(annual.precip.data)
annual.precip.data <- annual.precip.data[-1,]
save(... = annual.precip.data, file = 'annual.precip.data.RData')
precip.fc.data <- merge(annual.fc.data, annual.precip.data, by = 'site_location_name')
library(ggplot2)
library(cowplot)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean*365, y = pv_mean))
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean*365, y = bs_mean))
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean*365, y = npv_mean))
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = pv_mean))
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = bs_mean))
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = npv_mean))
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = pv_mean))
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = bs_mean))
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = npv_mean))
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = pv_mean))
View(precip.fc.data)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = pv_mean))
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = bs_mean))
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = npv_mean))
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = pv_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Green Cover (%)')
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = bs_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Bare Cover (%)')
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = npv_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Brown Cover (%)')
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = pv_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Green Cover (%)')
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = bs_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Bare Cover (%)')
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = npv_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Brown Cover (%)')
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = pv_mean)) + labs(x = 'Mean Annual Precipitation Coeffficent of Variance', y = 'Mean Annual Green Cover (%)')
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = bs_mean)) + labs(x = 'Mean Annual Precipitation Coeffficent of Variance', y = 'Mean Annual Bare Cover (%)')
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = npv_mean)) + labs(x = 'Mean Annual Precipitation Coeffficent of Variance', y = 'Mean Annual Brown Cover (%)')
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = pv_mean)) + labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Green Cover (%)')
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = bs_mean)) + labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Bare Cover (%)')
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = npv_mean)) + labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Brown Cover (%)')
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = pv_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Green Cover (%)')
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = bs_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Bare Cover (%)')
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = npv_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Brown Cover (%)')
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = precip_mean, colour = pv_mean)) + labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Green Cover (%)')
pl.prec.pv
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = precip_mean, colour = pv_mean)) #+ labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Green Cover (%)')
pl.prec.pv
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = precip_mean, colour = bs_mean)) #+ labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Green Cover (%)')
pl.prec.pv
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = bs_mean)) #+ labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Green Cover (%)')
pl.prec.pv
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = bs_cv)) #+ labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Green Cover (%)')
pl.prec.pv
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_pv, y = bs_pv)) #+ labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Green Cover (%)')
pl.prec.pv
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = pv_cv)) #+ labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Green Cover (%)')
pl.prec.pv
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = bs_cv)) #+ labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Bare Cover (%)')
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = pv_cv)) #+ labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Green Cover (%)')
pl.prec.pv
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = bs_cv)) #+ labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Bare Cover (%)')
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = npv_cv)) #+ labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Brown Cover (%)')
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_sd, y = pv_sd)) #+ labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Green Cover (%)')
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_sd, y = bs_sd)) #+ labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Bare Cover (%)')
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_sd, y = npv_sd)) #+ labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Brown Cover (%)')
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_sd, y = pv_mean)) #+ labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Green Cover (%)')
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_sd, y = bs_mean)) #+ labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Bare Cover (%)')
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_sd, y = npv_mean)) #+ labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Brown Cover (%)')
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = pv_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Green Cover (%)')
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = bs_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Bare Cover (%)')
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = npv_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Brown Cover (%)')
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = pv_mean)) + labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Green Cover (%)')
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = pv_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Green Cover (%)') + geom_smooth()
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = bs_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Bare Cover (%)')  + geom_smooth()
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = npv_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Brown Cover (%)') + geom_smooth()
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = pv_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Green Cover (%)') + geom_smooth()
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = bs_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Bare Cover (%)')  + geom_smooth()
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = npv_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Brown Cover (%)') + geom_smooth()
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_mean, y = pv_mean)) + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Green Cover (%)') + geom_smooth()
pl.prec.pv <- ggplot(data = precip.fc.data, aes(x = precip_mean, y = pv_mean)) + geom_point() + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Green Cover (%)') + geom_smooth()
pl.prec.bs <- ggplot(data = precip.fc.data, aes(x = precip_mean, y = bs_mean)) + geom_point() + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Bare Cover (%)')  + geom_smooth()
pl.prec.npv <- ggplot(data = precip.fc.data, aes(x = precip_mean, y = npv_mean)) + geom_point() + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Brown Cover (%)') + geom_smooth()
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
library(ggplot2)
library(cowplot)
pl.prec.pv <- ggplot(data = precip.fc.data, aes(x = precip_mean, y = pv_mean)) + geom_point() + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Green Cover (%)')
pl.prec.bs <- ggplot(data = precip.fc.data, aes(x = precip_mean, y = bs_mean)) + geom_point() + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Bare Cover (%)')
pl.prec.npv <- ggplot(data = precip.fc.data, aes(x = precip_mean, y = npv_mean)) + geom_point() + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Brown Cover (%)')
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = pv_mean)) + labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Green Cover (%)')
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = bs_mean)) + labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Bare Cover (%)')
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = npv_mean)) + labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Brown Cover (%)')
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
library(ggplot2)
library(cowplot)
pl.prec.pv <- ggplot(data = precip.fc.data, aes(x = precip_mean, y = pv_mean)) + geom_point() + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Green Cover (%)')
pl.prec.bs <- ggplot(data = precip.fc.data, aes(x = precip_mean, y = bs_mean)) + geom_point() + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Bare Cover (%)')
pl.prec.npv <- ggplot(data = precip.fc.data, aes(x = precip_mean, y = npv_mean)) + geom_point() + labs(x = 'Mean Annual Precipitation (mm/y)', y = 'Mean Annual Brown Cover (%)')
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
pl.prec.pv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = pv_mean)) + labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Green Cover (%)')
pl.prec.bs <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = bs_mean)) + labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Bare Cover (%)')
pl.prec.npv <- ggplot(data = precip.fc.data) + geom_point(aes(x = precip_cv, y = npv_mean)) + labs(x = 'Mean Annual Precipitation (CV)', y = 'Mean Annual Brown Cover (%)')
plot_grid(pl.prec.bs, pl.prec.npv, pl.prec.pv)
library(leaflet)
install.packages("leaflet")
veg.info <- readRDS("../STEP2_VEG_EXTRACTION/site_veg.rds")
library(leaflet)
veg.info <- readRDS("../STEP2_VEG_EXTRACTION/site_veg.rds")
site.info <- as.data.frame(veg.info$site.info)
aus.map.var <- leaflet(df) %>% addTiles %>%
addCircleMarkers(data = df,
lat = ~latitude,
lng = ~longitude,
radius = 3,
fillOpacity = 1,
)
aus.map.var <- leaflet(site.info) %>% addTiles %>%
addCircleMarkers(data = df,
lat = ~latitude,
lng = ~longitude,
radius = 3,
fillOpacity = 1)
aus.map.var <- leaflet(site.info) %>% addTiles %>%
addCircleMarkers(data = site.info,
lat = ~latitude,
lng = ~longitude,
radius = 3,
fillOpacity = 1)
aus.map.var
aus.map.var <- leaflet(site.info) %>% addTiles %>%
addCircleMarkers(data = site.info,
lat = ~latitude,
lng = ~longitude,
radius = 1,
fillOpacity = 1)
aus.map.var
aus.map.var <- leaflet(site.info) %>% addTiles %>%
addCircleMarkers(data = site.info,
lat = ~latitude,
lng = ~longitude,
radius = 1,
fillOpacity = 1, color = 'green')
aus.map.var
aus.map.var <- leaflet(site.info) %>% addTiles %>%
addCircleMarkers(data = site.info,
lat = ~latitude,
lng = ~longitude,
radius = 1,
fillOpacity = 0.5, color = 'green')
aus.map.var
aus.map.var <- leaflet(site.info) %>% addTiles %>%
addCircleMarkers(data = site.info,
lat = ~latitude,
lng = ~longitude,
radius = 0.5,
fillOpacity = 0.5, color = 'green')
aus.map.var
aus.map.var <- leaflet(site.info) %>% addTiles %>%
addCircleMarkers(data = site.info,
lat = ~latitude,
lng = ~longitude,
radius = 0.5,
fillOpacity = 1, color = 'green')
aus.map.var
veg.info <- readRDS("../STEP2_VEG_EXTRACTION/site_veg.rds")
site.info <- as.data.frame(veg.info$site.info)
site.info[which(site_location_name == 'NSAMDD0032'),]
site.info[which(site.info$site_location_name == 'NSAMDD0032'),]
library(plotly)
library(ggplot2)
library(xts)
library(forecast)
library(seasonal)
library(dplyr)
library(caret)
directory <- "/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/DataExtraction/BACKUP_DATA/csv_files/"
trim_to_nearest_coord <- function(ausplots.info.i.index, veg.info, dea.fc.i, reference.query ) {
reference.query.index <- which(reference.query$site_location_name == veg.info$site.info$site_location_name[ausplots.info.i.index][1])
#print(reference.query.index)
# Site End Points:
#W.site <- veg.info$site.info$pit_marker_easting[ausplots.info.i.index][2]
#S.site <- veg.info$site.info$pit_marker_northing[ausplots.info.i.index][2]
W.site <- reference.query$pit_marker_easting[reference.query.index]
S.site <- reference.query$pit_marker_northing[reference.query.index]
N.site <- S.site + 100
E.site <- W.site + 100
#print(W.site)
# Remote End Points:
E.remote.incre <- unique(dea.fc.i$x)
N.remote.incre <- unique(dea.fc.i$y)
# Find Closest Points:
W.closest <- E.remote.incre[which.min(abs(E.remote.incre - W.site))]
E.closest <- E.remote.incre[which.min(abs(E.remote.incre - E.site))]
N.closest <- N.remote.incre[which.min(abs(N.remote.incre - N.site))]
S.closest <- N.remote.incre[which.min(abs(N.remote.incre - S.site))]
#print(W.closest)
#print(E.closest)
#print(N.closest)
#print(S.closest)
# Trim dataset:
trimmed <- subset(dea.fc.i, subset = (x >= W.closest & x <= E.closest &
y >= S.closest & y <= N.closest))
#print(unique(trimmed$x))
#print(unique(trimmed$y))
return(trimmed)
}
sites.query <- read.csv("/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/query/sites_info_query.csv")
veg.info <- readRDS("../STEP2_VEG_EXTRACTION/site_veg.rds")
insitu.fractional.cover <- readRDS("AusPlots_fractional_cover.rds")
files <- list.files(directory, pattern = "\\.csv$", full.names = FALSE)
file.names <- tools::file_path_sans_ext(files)
RI = which(file.names == 'NSAMDD0032') # record index
site.info.data <- veg.info$site.info
site.info.index <- which(site.info.data$site_location_name == file.names[RI])
site.info.data <- site.info.data[site.info.index,]
ausplots.fc <- insitu.fractional.cover[grep(file.names[RI], insitu.fractional.cover$site_unique),]
site.info.data <- merge(ausplots.fc, site.info.data, by = 'site_unique')
site.path <- paste(directory,files[RI],sep = "")
dea.data <- read.csv(site.path)
dea.data <- subset(dea.data, subset = (ue < 27))
dea.data <- trim_to_nearest_coord(site.info.index, veg.info, dea.data, sites.query)
dea.data.agg <- aggregate(dea.data, by = list(dea.data$time),
FUN = mean, na.rm = T)
posit.date <- as.POSIXlt(dea.data.agg$Group.1) # for use for a later section: smoothing time series
dea.data.agg$Group.1 <- as.Date(dea.data.agg$Group.1)
## Get essential data from Ausplots
site.info.data.essen <- site.info.data[,c("visit_start_date", "bare",
"brown", "green" )]
site.info.data.essen$visit_start_date <- as.Date(site.info.data.essen$visit_start_date)
colnames(site.info.data.essen) <- colnames(
dea.data.agg[,c("Group.1","bs","npv","pv")]
)
dea.data.agg.essen <- dea.data.agg[,c("Group.1","bs","npv","pv", "ue")]
time.sequence <- data.frame(Group.1 =  seq(from = min(dea.data.agg.essen$Group.1), to = max(dea.data.agg.essen$Group.1), by='8 days'))
## Using ggplotly
pl <- ggplot(dea.data.agg.essen, aes(x = Group.1)) +
geom_line(mapping = aes(y = bs, colour = "bs")) +
geom_line(mapping = aes(y = npv, colour = "npv")) +
geom_line(mapping = aes(y = pv, colour = "pv")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
xlab("Time") +
ylab("Colour Intensity") +
labs(title = file.names[RI]) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bs.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "npv.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "pv.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bs" = "red", "npv" = "blue", "pv" = "green", "ue" = "yellow",
"bs.obs" = "darkred", "npv.obs" = "darkblue",
"pv.obs" = "darkgreen")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
p <- ggplotly(pl) %>%
rangeslider()
p
p
## Using ggplotly
pl <- ggplot(dea.data.agg.essen, aes(x = Group.1)) +
geom_line(mapping = aes(y = bs, colour = "bare")) +
geom_line(mapping = aes(y = npv, colour = "brown")) +
geom_line(mapping = aes(y = pv, colour = "green")) +
geom_line(mapping = aes(y = ue, colour = "ue")) +
xlab("Time") +
ylab("Colour Intensity") +
labs(title = file.names[RI]) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bare.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "brown.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "green.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bare" = "red", "brown" = "blue", "green" = "green", "ue" = "yellow",
"bare.obs" = "darkred", "brown.obs" = "darkblue",
"green.obs" = "darkgreen")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
p <- ggplotly(pl) %>%
rangeslider()
p
## Using ggplotly
pl <- ggplot(dea.data.agg.essen, aes(x = Group.1)) +
geom_line(mapping = aes(y = bs, colour = "bare")) +
geom_line(mapping = aes(y = npv, colour = "brown")) +
geom_line(mapping = aes(y = pv, colour = "green")) +
#geom_line(mapping = aes(y = ue, colour = "ue")) +
xlab("Time") +
ylab("Colour Intensity") +
labs(title = file.names[RI]) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bare.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "brown.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "green.obs")) +
scale_color_manual(
name = "Colour Bands",
values = c("bare" = "red", "brown" = "blue", "green" = "green",# "ue" = "yellow",
"bare.obs" = "darkred", "brown.obs" = "darkblue",
"green.obs" = "darkgreen")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
p <- ggplotly(pl) %>%
rangeslider()
p
## Using ggplotly
pl <- ggplot(dea.data.agg.essen, aes(x = Group.1)) +
geom_line(mapping = aes(y = bs, colour = "bare")) +
geom_line(mapping = aes(y = npv, colour = "brown")) +
geom_line(mapping = aes(y = pv, colour = "green")) +
#geom_line(mapping = aes(y = ue, colour = "ue")) +
xlab("Time") +
ylab("Fractional Cover (%)") +
labs(title = file.names[RI]) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = bs, colour = "bare.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = npv, colour = "brown.obs")) +
geom_point(data = site.info.data.essen,
mapping = aes(x = Group.1, y = pv, colour = "green.obs")) +
scale_color_manual(
name = "Cover Types",
values = c("bare" = "red", "brown" = "blue", "green" = "green",# "ue" = "yellow",
"bare.obs" = "darkred", "brown.obs" = "darkblue",
"green.obs" = "darkgreen")) +
theme_minimal() +
scale_x_date(date_breaks = "2 months", date_labels = "%Y %b",
date_minor_breaks = "2 month") +
theme(axis.text.x=element_text(angle=60, hjust = 1)) +
geom_hline(yintercept = 0)
p <- ggplotly(pl) %>%
rangeslider()
p
View(site.info.data)
library(ggplot2)
#dea.fc.sites.nearest <- read.csv("dea_fc_sites_nearest_pixel_inc.csv")
dea.fc.sites.nearest <- read.csv("dea_fc_sites_nearest_filtered_ue.csv")
dea.fc.sites.nearest <- read.csv("dea_fc_sites_nearest_new_aggregation.csv")
insitu.fractional.cover <- subset(insitu.fractional.cover, (NA. <= 10))
dea.fc.sites.plotting <- merge(dea.fc.sites.nearest, insitu.fractional.cover, by = 'site_unique')
dea.fc.sites.plotting <- subset(dea.fc.sites.plotting, subset = (npixels >= 100 & npixels <= 121))
# Greenness
cal.green <- ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + labs(x = "green cover (in-situ)", y = "green cover (remote)")
library(ggplot2)
dea.fc.sites.nearest <- read.csv("dea_fc_sites_nearest_new_aggregation.csv")
library(ausplotsR)
directory <- "/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/DataExtraction/BACKUP_DATA/csv_files"
files <- list.files(directory, pattern = "\\.csv$", full.names = FALSE)
fileNames <- tools::file_path_sans_ext(files)
veg.info <- readRDS("../STEP2_VEG_EXTRACTION/site_veg.rds")
sites.query <- read.csv("/Users/krish/Desktop/DYNAMIC MODEL VEGETATION PROJECT/au_dyanamic_vegetation_project/query/sites_info_query.csv")
insitu.fractional.cover <- readRDS("AusPlots_fractional_cover.rds")
#dea.fc.sites.nearest <- read.csv("dea_fc_sites_nearest_pixel_inc.csv")
#dea.fc.sites.nearest <- read.csv("dea_fc_sites_nearest_filtered_ue.csv")
dea.fc.sites.nearest <- read.csv("dea_fc_sites_nearest_new_aggregation.csv")
insitu.fractional.cover <- subset(insitu.fractional.cover, (NA. <= 10))
dea.fc.sites.plotting <- merge(dea.fc.sites.nearest, insitu.fractional.cover, by = 'site_unique')
dea.fc.sites.plotting <- subset(dea.fc.sites.plotting, subset = (npixels >= 100 & npixels <= 121))
# Greenness
cal.green <- ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + labs(x = "green cover (in-situ)", y = "green cover (remote)")
cal.green
Metrics::rmse(actual = dea.fc.sites.plotting$green,
predicted = dea.fc.sites.plotting$pv)
# Bare
cal.bare <- ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)  + labs(x = "bare cover (in-situ)", y = "bare cover (remote)")
cal.bare
Metrics::rmse(actual = dea.fc.sites.plotting$bare,
predicted = dea.fc.sites.plotting$bs)
# Brown
cal.brown <- ggplot(dea.fc.sites.plotting, aes(y = npv, x = brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + labs(x = "brown cover (in-situ)", y = "brown cover (remote)")
Metrics::rmse(actual = dea.fc.sites.plotting$brown,
predicted = dea.fc.sites.plotting$npv)
cal.all <- ggplot(dea.fc.sites.plotting) + geom_point(aes(x = bare, y = bs), colour = 'red') + geom_point(aes(x = green, y = pv), colour = '#009E73') + geom_point(aes(x = brown, y = npv), colour = '#0072B2') + geom_abline() +
xlim(0,100) + ylim(0,100) + labs(x = "cover (in-situ)", y = "cover (remote)")
cowplot::plot_grid(cal.green, cal.brown, cal.bare,cal.all )
library(ggplot2)
#dea.fc.sites.nearest <- read.csv("dea_fc_sites_nearest_pixel_inc.csv")
#dea.fc.sites.nearest <- read.csv("dea_fc_sites_nearest_filtered_ue.csv")
dea.fc.sites.nearest <- read.csv("dea_fc_sites_nearest_new_aggregation.csv")
insitu.fractional.cover <- subset(insitu.fractional.cover, (NA. <= 10))
dea.fc.sites.plotting <- merge(dea.fc.sites.nearest, insitu.fractional.cover, by = 'site_unique')
dea.fc.sites.plotting <- subset(dea.fc.sites.plotting, subset = (npixels >= 100 & npixels <= 121))
# Greenness
cal.green <- ggplot(dea.fc.sites.plotting, aes(y = pv, x = green)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + labs(x = "green cover (in-situ)", y = "green cover (remote)")
cal.green
Metrics::rmse(actual = dea.fc.sites.plotting$green,
predicted = dea.fc.sites.plotting$pv)
# Bare
cal.bare <- ggplot(dea.fc.sites.plotting, aes(y = bs, x = bare)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100)  + labs(x = "bare cover (in-situ)", y = "bare cover (remote)")
cal.bare
Metrics::rmse(actual = dea.fc.sites.plotting$bare,
predicted = dea.fc.sites.plotting$bs)
# Brown
cal.brown <- ggplot(dea.fc.sites.plotting, aes(y = npv, x = brown)) + geom_point() + geom_abline() +
xlim(0,100) + ylim(0,100) + labs(x = "brown cover (in-situ)", y = "brown cover (remote)")
Metrics::rmse(actual = dea.fc.sites.plotting$brown,
predicted = dea.fc.sites.plotting$npv)
cal.all <- ggplot(dea.fc.sites.plotting) + geom_point(aes(x = bare, y = bs), colour = 'red') + geom_point(aes(x = green, y = pv), colour = '#009E73') + geom_point(aes(x = brown, y = npv), colour = '#0072B2') + geom_abline() +
xlim(0,100) + ylim(0,100) + labs(x = "cover (in-situ)", y = "cover (remote)")
cowplot::plot_grid(cal.green, cal.brown, cal.bare,cal.all )
